Method;TargetClass;ATFD;ATSD;FDP;DIST_EC;DIST_TC;LOC_M;LOC_EC;LOC_TC
org.javacc.parser.LexGen.writeTemplate(java.lang.Object[], java.lang.String);org.javacc.parser.CodeGenerator;1;0;3;1.0;0.9743589743589743;32;856;212
org.javacc.jjtree.JJTreeParser.notTailOfExpansionUnit();org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.tryTokenSequence(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope, org.javacc.jjtree.Token, org.javacc.jjtree.Token);org.javacc.jjtree.ASTProduction;0;0;0;0;0
org.javacc.parser.ParseGenCPP.start();org.javacc.parser.CodeGenerator;13;0;4;1.0;0.6666666666666667;401;404;212
org.javacc.parser.Semanticize.action(org.javacc.parser.Expansion);org.javacc.parser.LookaheadCalc;0;0;0;0;0
org.javacc.jjtree.JJTree.main(java.lang.String[]);org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0
org.javacc.parser.LexGen.start();org.javacc.parser.Options;0;9;6;0.8333333333333334;1.0;144;856;309
org.javacc.parser.LexGen.writeTemplate(java.lang.Object[], java.lang.String);org.javacc.parser.Options;0;0;3;1.0;1.0;32;856;309
org.javacc.parser.ParseEngine.buildPhase3Routine(boolean, org.javacc.parser.Phase3Data);org.javacc.parser.JavaCCGlobals;0;0;0;0;0
org.javacc.parser.JavaCCParser.getNextToken();org.javacc.parser.Token;0;0;0;0;0
org.javacc.jjtree.JJTreeNode.print(org.javacc.jjtree.IO, org.javacc.jjtree.Token);org.javacc.jjtree.TokenUtils;0;0;0;0;0
org.javacc.parser.OutputFile.getPrintWriter();org.javacc.parser.JavaCCGlobals;0;6;3;0.7;1.0;19;150;314
org.javacc.jjtree.JJTreeParser.expansion(org.javacc.jjtree.ASTProduction);org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase3Routine(boolean, org.javacc.parser.Phase3Data);org.javacc.parser.Choice;0;0;0;0;0
org.javacc.parser.RStringLiteral.GenerateDfa(int, org.javacc.parser.CodeGenerator);org.javacc.parser.RegularExpression;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTCompilationUnit);org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.javacc_options();org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0
org.javacc.parser.TryBlock.dump(int, java.util.Set);org.javacc.parser.Expansion;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.jjFillToken();org.javacc.parser.JavaCharStream;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTExpansionNodeScope);org.javacc.jjtree.SimpleNode;0;0;0;0;0
org.javacc.parser.ParseEngine.setupPhase3Builds(org.javacc.parser.Phase3Data);org.javacc.parser.NonTerminal;1;3;2;0.9210526315789473;0.9285714285714286;48;1106;28
org.javacc.parser.JavaCCParser.Arguments(java.util.List);org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.ParseEngine.buildLookaheadChecker(java.lang.String[], org.javacc.parser.Lookahead[]);org.javacc.parser.Semanticize;0;0;0;0;0
org.javacc.utils.ConditionParser.jj_consume_token(int);org.javacc.utils.ConditionParserTokenManager;0;0;0;0;0
org.javacc.utils.ConditionParser.ReInit(java.io.Reader);org.javacc.utils.ConditionParserTokenManager;0;0;0;0;0
org.javacc.parser.ParseEngine.generateCPPMethodheader(org.javacc.parser.BNFProduction, org.javacc.parser.Token);org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.NfaState.DumpNonAsciiMoveMethod(org.javacc.parser.CodeGenerator);org.javacc.parser.LexGen;0;3;3;0.9523809523809523;1.0;37;1754;856
org.javacc.jjtree.JJTree.main(java.lang.String[]);org.javacc.jjtree.NodeFiles;0;3;10;0.8421052631578947;1.0;76;138;160
org.javacc.parser.LexGen.DumpFillToken();org.javacc.parser.Options;0;0;3;1.0;1.0;69;856;309
org.javacc.parser.ROneOrMore.GenerateNfa(boolean);org.javacc.parser.Nfa;0;0;0;0;0
org.javacc.utils.ConditionParserTokenManager.getNextToken();org.javacc.utils.Token;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.jj_scan_token(int);org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.parser.ParseEngine.minimumSize(int, org.javacc.parser.Expansion);org.javacc.parser.Sequence;0;0;0;0;0
org.javacc.jjtree.NodeScope.getNodeDescriptorText();org.javacc.jjtree.ASTNodeDescriptor;1;0;1;1.0;0.9230769230769231;3;187;89
org.javacc.parser.JavaCCParser.expansion(org.javacc.parser.Container);org.javacc.parser.Container;0;0;0;0;0
org.javacc.parser.ParseGenCPP.start();org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.JavaCCParser.getToken(int);org.javacc.parser.JavaCCParserTokenManager;0;0;0;0;0
org.javacc.parser.JavaCCParser.complex_regular_expression_unit(org.javacc.parser.Container);org.javacc.parser.RZeroOrOne;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpMoreActions();org.javacc.parser.LexGen;0;0;3;1.0;1.0;44;756;856
org.javacc.jjtree.JJTreeParser.node_descriptor();org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.jjMoveStringLiteralDfa4_0(long, long, long, long, long, long);org.javacc.parser.JavaCharStream;0;0;0;0;0
org.javacc.parser.ParseEngine.genFirstSet(org.javacc.parser.Expansion);org.javacc.parser.NonTerminal;1;3;1;0.9230769230769231;0.9333333333333333;54;1106;28
org.javacc.parser.RChoice.CompressCharLists();org.javacc.parser.RCharacterList;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase2Routine(org.javacc.parser.Lookahead);org.javacc.parser.Options;0;3;3;0.925;1.0;21;1106;309
org.javacc.parser.test.NfaStateTest.setUp();org.javacc.parser.Main;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.insertCloseNodeCode(boolean, java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.ASTNodeDescriptor;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.ReInit(org.javacc.jjtree.JJTreeParserTokenManager);org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0
org.javacc.parser.ParseEngine.phase1ExpansionGen(org.javacc.parser.Expansion);org.javacc.parser.Options;0;4;3;0.9482758620689655;1.0;230;1106;309
org.javacc.parser.OptionsTest.testNormalize();org.javacc.parser.JavaCCErrors;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase2Routine(org.javacc.parser.Lookahead);org.javacc.parser.Lookahead;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpStaticVarDeclarations();org.javacc.parser.CodeGenerator;3;0;2;1.0;0.9090909090909091;52;756;212
org.javacc.parser.JavaCCParser.ReInit(java.io.Reader);org.javacc.parser.JavaCCParserTokenManager;0;0;0;0;0
org.javacc.parser.ParseEngine.buildLookaheadChecker(java.lang.String[], org.javacc.parser.Lookahead[]);org.javacc.parser.Expansion;1;8;3;0.8181818181818181;0.96875;161;1106;34
org.javacc.parser.ExpansionTest.setUp();org.javacc.parser.Expansion;2;1;1;0.9333333333333333;0.875;8;72;34
org.javacc.jjtree.JJTreeParser.regular_expression();org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0
org.javacc.parser.RSequence.GenerateNfa(boolean);org.javacc.parser.RegularExpression;0;0;0;0;0
org.javacc.parser.NfaState.AddChar(char);org.javacc.parser.LexGen;0;4;3;0.9285714285714286;1.0;30;1754;856
org.javacc.parser.ParseEngine.genReturn(boolean);org.javacc.parser.Expansion;1;0;2;1.0;0.9285714285714286;13;1106;34
org.javacc.parser.test.NfaStateTest.testDumpCharAndRangeMovesInitialised();org.javacc.parser.NfaState;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.tryTokenSequence(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope, org.javacc.jjtree.Token, org.javacc.jjtree.Token);org.javacc.jjtree.TokenUtils;0;0;0;0;0
org.javacc.utils.ConditionParserTokenManager.jjMoveStringLiteralDfa1_2(long);org.javacc.utils.JavaCharStream;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.expansion(org.javacc.jjtree.ASTProduction);org.javacc.jjtree.ASTExpansionNodeScope;0;0;0;0;0
org.javacc.parser.NfaState.AddChar(char);org.javacc.parser.Options;0;4;3;0.9285714285714286;1.0;30;1754;309
org.javacc.parser.ParseEngine.buildPhase2Routine(org.javacc.parser.Lookahead);org.javacc.parser.CodeGenerator;2;3;3;0.925;0.9512195121951219;21;1106;212
org.javacc.parser.JavaCCParserTokenManager.jjMoveStringLiteralDfa1_0(long, long, long);org.javacc.parser.JavaCharStream;0;0;0;0;0
org.javacc.parser.ParseEngine.genFirstSet(org.javacc.parser.Expansion);org.javacc.parser.Choice;0;0;0;0;0
org.javacc.parser.ZeroOrOne.dump(int, java.util.Set);org.javacc.parser.Expansion;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFDeclaration);org.javacc.jjtree.ASTBNFDeclaration;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTGrammar);org.javacc.parser.JavaCCGlobals;0;0;0;0;0
org.javacc.parser.ParseEngine.minimumSize(int, org.javacc.parser.Expansion);org.javacc.parser.OneOrMore;0;0;0;0;0
org.javacc.utils.ConditionParser.jj_consume_token(int);org.javacc.utils.Token;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpCharAndRangeMovesInitialised();org.javacc.parser.CodeGenerator;0;0;0;0;0
org.javacc.parser.RCharacterList.GenerateNfa(boolean);org.javacc.parser.SingleCharacter;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpStatesForKind();org.javacc.parser.NfaState;0;0;0;0;0
org.javacc.jjtree.JJTreeOptionsTest.testValidateReturnType();org.javacc.jjtree.JJTreeOptions;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion_choices(org.javacc.parser.Container);org.javacc.parser.Container;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpStaticVarDeclarations();org.javacc.parser.LexGen;0;0;2;1.0;1.0;52;756;856
org.javacc.parser.JavaCCParser.jj_consume_token(int);org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.RZeroOrOne.GenerateNfa(boolean);org.javacc.parser.NfaState;0;0;0;0;0
org.javacc.parser.ParseEngine.phase1ExpansionGen(org.javacc.parser.Expansion);org.javacc.parser.RegularExpression;0;0;0;0;0
org.javacc.parser.LexGen.PrintClassHead();org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.ParseEngine.genFirstSet(org.javacc.parser.Expansion);org.javacc.parser.OneOrMore;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFAction);org.javacc.jjtree.JJTreeNode;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.javacc_options();org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTJavacodeBody);org.javacc.jjtree.IO;0;0;0;0;0
org.javacc.parser.JavaCCParser.jj_ntk();org.javacc.parser.Token;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTLHS);org.javacc.jjtree.JJTreeNode;0;0;0;0;0
org.javacc.jjdoc.HTMLGenerator.print(java.lang.String);org.javacc.jjdoc.TextGenerator;1;0;1;1.0;0.962962962962963;3;141;108
org.javacc.parser.LexGen.start();org.javacc.parser.CodeGenerator;2;9;6;0.8333333333333334;0.9736842105263158;144;856;212
org.javacc.parser.JavaCCParserTokenManager.jjMoveStringLiteralDfa8_0(long, long, long, long);org.javacc.parser.JavaCharStream;0;0;0;0;0
org.javacc.parser.ParseEngine.genFirstSet(org.javacc.parser.Expansion);org.javacc.parser.ZeroOrMore;0;0;0;0;0
org.javacc.parser.JavaCCParser.bnf_production();org.javacc.parser.Container;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFAction);org.javacc.jjtree.NodeScope;0;0;0;0;0
org.javacc.parser.ParseEngine.setupPhase3Builds(org.javacc.parser.Phase3Data);org.javacc.parser.Sequence;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFNodeScope);org.javacc.jjtree.ASTNodeDescriptor;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpStaticVarDeclarations();org.javacc.parser.Options;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.node_descriptor();org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0
org.javacc.parser.JavaCCParser.regular_expr_production();org.javacc.parser.JavaCCErrors;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.jj_scan_token(int);org.javacc.jjtree.JJTreeParserTokenManager;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.jjMoveStringLiteralDfa5_0(long, long, long, long);org.javacc.parser.JavaCharStream;0;0;0;0;0
org.javacc.parser.RStringLiteral.GenerateDfa(int, org.javacc.parser.CodeGenerator);org.javacc.parser.NfaState;0;1;5;0.95;1.0;40;819;1754
org.javacc.parser.ParseEngine.buildPhase3Routine(boolean, org.javacc.parser.Phase3Data);org.javacc.parser.TryBlock;0;0;0;0;0
org.javacc.parser.ParseEngine.generate3R(org.javacc.parser.Expansion, org.javacc.parser.Phase3Data);org.javacc.parser.Phase3Data;1;3;3;0.9302325581395349;0.9285714285714286;33;1106;4
org.javacc.jjtree.JJTreeOptionsTest.testValidate();org.javacc.parser.JavaCCErrors;0;0;0;0;0
org.javacc.parser.ParseEngine.setupPhase3Builds(org.javacc.parser.Phase3Data);org.javacc.parser.NormalProduction;0;0;0;0;0
org.javacc.parser.Lookahead.dump(int, java.util.Set);org.javacc.parser.Expansion;0;0;0;0;0
org.javacc.parser.RZeroOrOne.GenerateNfa(boolean);org.javacc.parser.RegularExpression;0;0;0;0;0
org.javacc.parser.ParseEngine.javaCodeCheck(org.javacc.parser.Expansion);org.javacc.parser.TryBlock;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpStateSets();org.javacc.parser.NfaState;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.tryTokenSequence(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope, org.javacc.jjtree.Token, org.javacc.jjtree.Token);org.javacc.jjtree.IO;0;0;0;0;0
org.javacc.parser.JavaCCParser.ReturnStatement();org.javacc.parser.Token;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.expansion_unit(org.javacc.jjtree.ASTProduction);org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0
org.javacc.parser.ParseEngine.dumpFormattedString(java.lang.String);org.javacc.parser.CodeGenerator;2;2;1;0.9444444444444444;0.9444444444444444;34;1106;212
org.javacc.parser.ExpansionTest.testRZeroOrMoreConstructor();org.javacc.parser.Expansion;2;1;2;0.9375;0.8823529411764706;7;72;34
org.javacc.parser.JavaCCParser.complex_regular_expression_unit(org.javacc.parser.Container);org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.RStringLiteral.GenerateDfa(int, org.javacc.parser.CodeGenerator);org.javacc.parser.KindInfo;2;1;5;0.95;0.9;40;819;12
org.javacc.jjtree.JJTreeParser.bnf_production();org.javacc.jjtree.ASTBNFNodeScope;0;0;0;0;0
org.javacc.parser.ParseGen.start(boolean);org.javacc.parser.JavaCCErrors;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.eatUptoCloseBrace();org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.parser.ParseEngine.genReturn(boolean);org.javacc.parser.Options;0;0;2;1.0;1.0;13;1106;309
org.javacc.parser.OutputFile.checkOptions(java.io.File, java.lang.String[]);org.javacc.parser.JavaCCErrors;0;0;0;0;0
org.javacc.jjtree.ASTOptionBinding.initialize(java.lang.String, java.lang.String);org.javacc.jjtree.JJTreeGlobals;0;2;1;0.5;1.0;6;23;32
org.javacc.jjtree.JJTreeParser.character_descriptor();org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.getNextToken();org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.parser.ParseEngine.javaCodeCheck(org.javacc.parser.Expansion);org.javacc.parser.Choice;0;0;0;0;0
org.javacc.parser.ParseEngine.phase1ExpansionGen(org.javacc.parser.Expansion);org.javacc.parser.Expansion;0;0;0;0;0
org.javacc.jjtree.JJTreeNode.print(org.javacc.jjtree.IO, org.javacc.jjtree.Token);org.javacc.jjtree.NodeScope;1;2;2;0.8888888888888888;0.9583333333333334;47;138;187
org.javacc.parser.JavaCCParser.bnf_production();org.javacc.parser.JavaCCParserInternals;0;0;0;0;0
org.javacc.parser.JavaCCParser.regular_expression(org.javacc.parser.Container);org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpFillToken();org.javacc.parser.JavaFiles;0;0;4;1.0;1.0;68;756;290
org.javacc.jjtree.ASTNodeDescriptor.translateImage(org.javacc.jjtree.Token);org.javacc.jjtree.JJTreeNode;1;0;1;1.0;0.9090909090909091;3;89;138
org.javacc.jjtree.CPPCodeGenerator.tryTokenSequence(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope, org.javacc.jjtree.Token, org.javacc.jjtree.Token);org.javacc.jjtree.NodeScope;0;0;0;0;0
org.javacc.utils.ConditionParserTokenManager.getNextToken();org.javacc.utils.JavaCharStream;0;0;0;0;0
org.javacc.parser.JavaCCParser.jj_consume_token(int);org.javacc.parser.JavaCCParserTokenManager;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion_unit(org.javacc.parser.Container);org.javacc.parser.JavaCCErrors;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.javacode_production();org.javacc.jjtree.ASTProduction;0;0;0;0;0
org.javacc.parser.JavaCCParser.regexpr_spec(org.javacc.parser.TokenProduction);org.javacc.parser.RegularExpression;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.CompilationUnit();org.javacc.jjtree.JJTreeGlobals;0;0;0;0;0
org.javacc.parser.OptionsTest.testSetBooleanOption();org.javacc.parser.JavaCCErrors;0;0;0;0;0
org.javacc.jjtree.ASTGrammar.generate(org.javacc.jjtree.IO);org.javacc.jjtree.CPPCodeGenerator;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.insertOpenNodeCode(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.parser.Options;0;0;0;0;0
org.javacc.parser.RZeroOrMore.GenerateNfa(boolean);org.javacc.parser.NfaState;1;1;1;0.75;0.9827586206896551;11;18;1754
org.javacc.parser.ZeroOrMore.dump(int, java.util.Set);org.javacc.parser.Expansion;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase3Routine(boolean, org.javacc.parser.Phase3Data);org.javacc.parser.CodeGenerator;6;6;5;0.9107142857142857;0.8909090909090909;148;1106;212
org.javacc.parser.JavaCCParser.character_descriptor(org.javacc.parser.Container);org.javacc.parser.SingleCharacter;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpFillToken();org.javacc.parser.LexGen;0;0;4;1.0;1.0;68;756;856
org.javacc.jjdoc.HTMLGenerator.productionEnd(org.javacc.parser.NormalProduction);org.javacc.jjdoc.JJDocOptions;0;1;1;0.9583333333333334;1.0;6;141;26
org.javacc.jjtree.JJTreeParser.jj_consume_token(int);org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.TokenLexicalActions(org.javacc.jjtree.Token);org.javacc.jjtree.JavaCharStream;0;0;0;0;0
org.javacc.parser.RCharacterList.GenerateNfa(boolean);org.javacc.parser.JavaCCErrors;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.javacode_production();org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.jjMoveNfa_0(int, int);org.javacc.parser.JavaCharStream;0;0;0;0;0
org.javacc.parser.JavaCCParser.javacode_production();org.javacc.parser.JavaCCParserInternals;0;0;0;0;0
org.javacc.jjdoc.TextGenerator.create_output_stream();org.javacc.jjdoc.JJDocOptions;0;2;2;0.935483870967742;1.0;37;108;26
org.javacc.parser.JavaCCParser.ClassOrInterfaceDeclaration(int, java.util.List);org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.JavaCCParser.javacode_production();org.javacc.parser.JavaCodeProduction;0;0;0;0;0
org.javacc.parser.NormalProduction.dump(int, java.util.Set);org.javacc.parser.Expansion;0;0;0;0;0
org.javacc.parser.LexGenCPP.start();org.javacc.parser.LexGen;1;9;7;0.8235294117647058;1.0;150;756;856
org.javacc.jjtree.CPPCodeGenerator.insertOpenNodeCode(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.CPPNodeFiles;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.node_descriptor_expression();org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.tryExpansionUnit(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.JJTreeNode, org.javacc.jjtree.NodeScope);org.javacc.jjtree.IO;0;0;0;0;0
org.javacc.jjtree.JJTreeOptionsTest.testValidateReturnType();org.javacc.parser.Options;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpStatesForKind();org.javacc.parser.CodeGenerator;0;0;0;0;0
org.javacc.jjtree.DefaultJJTreeVisitor.defaultVisit(java.lang.Object, org.javacc.jjtree.SimpleNode);org.javacc.jjtree.SimpleNode;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveStringLiteralDfa8_0(long, long, long, long, long, long);org.javacc.jjtree.JavaCharStream;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFDeclaration);org.javacc.jjtree.TokenUtils;0;0;0;0;0
org.javacc.parser.ParseEngine.genReturn(boolean);org.javacc.parser.JavaCCGlobals;0;0;0;0;0
org.javacc.parser.JavaCCParser.character_descriptor(org.javacc.parser.Container);org.javacc.parser.CharacterRange;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTJavacodeBody);org.javacc.jjtree.JJTreeNode;0;0;0;0;0
org.javacc.jjtree.ASTOptionBinding.translateImage(org.javacc.jjtree.Token);org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.parser.OptionsTest.testSetStringOption();org.javacc.parser.JavaCCErrors;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTExpansionNodeScope);org.javacc.jjtree.NodeScope;0;0;0;0;0
org.javacc.parser.OptionsTest.testOptionsString();org.javacc.parser.JavaCCErrors;0;0;0;0;0
org.javacc.parser.RChoice.CompressCharLists();org.javacc.parser.RJustName;0;0;0;0;0
org.javacc.parser.CodeGenerator.saveOutput(java.lang.String);org.javacc.parser.Options;0;0;0;0;0
org.javacc.parser.NfaState.AddRange(char, char);org.javacc.parser.Options;0;3;3;0.9464285714285714;1.0;36;1754;309
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveStringLiteralDfa7_0(long, long, long, long, long, long);org.javacc.jjtree.JavaCharStream;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTCompilationUnit);org.javacc.jjtree.NodeFiles;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpTokenActions();org.javacc.parser.RStringLiteral;0;0;3;1.0;1.0;51;756;819
org.javacc.parser.LexGenCPP.start();org.javacc.parser.Options;0;9;7;0.8235294117647058;1.0;150;756;309
org.javacc.parser.RStringLiteral.GenerateDfa(int, org.javacc.parser.CodeGenerator);org.javacc.parser.Options;0;1;5;0.95;1.0;40;819;309
org.javacc.parser.ExpansionTest.testZeroOrOneConstructor();org.javacc.parser.Expansion;3;1;1;0.9375;0.8125;7;72;34
org.javacc.parser.JavaCCParserTokenManager.jjMoveStringLiteralDfa11_0(long, long, long, long);org.javacc.parser.JavaCharStream;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion_unit(org.javacc.parser.Container);org.javacc.parser.Container;0;0;0;0;0
org.javacc.utils.ConditionParser.getNextToken();org.javacc.utils.ConditionParserTokenManager;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase3Routine(boolean, org.javacc.parser.Phase3Data);org.javacc.parser.ZeroOrOne;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.javacode_production();org.javacc.jjtree.ASTJavacode;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.ClassOrInterfaceDeclaration();org.javacc.jjtree.JJTreeGlobals;0;0;0;0;0
org.javacc.parser.ExpansionTest.testZeroOrOneConstructor();org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.JavaCCParser.token_manager_decls();org.javacc.parser.JavaCCParserInternals;0;0;0;0;0
org.javacc.parser.JavaCCParser.regular_expression(org.javacc.parser.Container);org.javacc.parser.Container;0;0;0;0;0
org.javacc.parser.Semanticize.action(org.javacc.parser.Expansion);org.javacc.parser.Options;0;0;0;0;0
org.javacc.parser.ExpansionTest.testROneOrMoreConstructor();org.javacc.parser.Expansion;2;1;2;0.9375;0.8823529411764706;7;72;34
org.javacc.jjdoc.test.JJDocMainTest.testMainProgramHTML();org.javacc.jjdoc.JJDocMain;0;0;0;0;0
org.javacc.jjdoc.HTMLGenerator.nonterminalsEnd();org.javacc.jjdoc.JJDocOptions;0;1;1;0.9583333333333334;1.0;5;141;26
org.javacc.parser.CodeGenerator.genAnnotation(java.lang.String);org.javacc.parser.Options;0;1;1;0.9696969696969697;1.0;8;212;309
org.javacc.utils.JavaFileGenerator.evaluate(java.lang.String);org.javacc.utils.ConditionParser;0;0;0;0;0
org.javacc.parser.OptionsTest.testSetBooleanOption();org.javacc.parser.Options;0;0;1;1.0;1.0;17;128;309
org.javacc.jjdoc.TextGenerator.create_output_stream();org.javacc.jjdoc.JJDocGlobals;0;2;2;0.935483870967742;1.0;37;108;41
org.javacc.parser.JavaCCParser.expansion_unit(org.javacc.parser.Container);org.javacc.parser.Action;0;0;0;0;0
org.javacc.utils.ConditionParserTokenManager.jjStartNfaWithStates_0(int, int, int);org.javacc.utils.JavaCharStream;0;0;0;0;0
org.javacc.parser.ParseEngine.setupPhase3Builds(org.javacc.parser.Phase3Data);org.javacc.parser.Choice;0;0;0;0;0
org.javacc.parser.RChoice.GenerateNfa(boolean);org.javacc.parser.Nfa;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.getNextToken();org.javacc.jjtree.JavaCharStream;0;0;0;0;0
org.javacc.jjtree.JJTreeOptionsTest.testOutputDirectory();org.javacc.jjtree.JJTreeOptions;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpNonAsciiMoveMethodsInitialised();org.javacc.parser.CodeGenerator;0;0;0;0;0
org.javacc.parser.RStringLiteral.GenerateDfa(int, org.javacc.parser.CodeGenerator);org.javacc.parser.JavaCCErrors;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFAction);org.javacc.jjtree.SimpleNode;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFNodeScope);org.javacc.jjtree.IO;0;0;0;0;0
org.javacc.parser.OutputFile.checkVersion(java.io.File, java.lang.String);org.javacc.parser.JavaCCGlobals;0;1;1;0.9523809523809523;1.0;22;150;314
org.javacc.parser.JavaCCParser.character_list(org.javacc.parser.Container);org.javacc.parser.Token;0;0;0;0;0
org.javacc.jjtree.ASTNodeDescriptor.toString();org.javacc.jjtree.SimpleNode;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.insertCatchBlocks(java.lang.String, java.util.Enumeration, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.IO;0;0;0;0;0
org.javacc.parser.RChoice.CheckUnmatchability();org.javacc.parser.RegularExpression;0;0;0;0;0
org.javacc.parser.RCharacterList.ToCaseNeutral();org.javacc.parser.CharacterRange;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.insertOpenNodeCode(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.ASTNodeDescriptor;0;0;0;0;0
org.javacc.utils.ParseException.getMessage();org.javacc.utils.Token;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.jjFillToken();org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.parser.CodeGenerator.getStringToPrint(org.javacc.parser.Token);org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.JavaCCParser.CompilationUnit();org.javacc.parser.JavaCCParserInternals;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpGetNextToken();org.javacc.parser.NfaState;2;0;4;1.0;0.9682539682539683;225;756;1754
org.javacc.parser.ParseEngine.buildPhase3Routine(boolean, org.javacc.parser.Phase3Data);org.javacc.parser.ZeroOrMore;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.tryExpansionUnit(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.JJTreeNode, org.javacc.jjtree.NodeScope);org.javacc.jjtree.NodeScope;0;0;0;0;0
org.javacc.parser.ParseEngine.genFirstSet(org.javacc.parser.Expansion);org.javacc.parser.RegularExpression;0;0;0;0;0
org.javacc.parser.JavaCCParser.eatUptoCloseBrace(java.util.List);org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.ParseEngine.build(org.javacc.parser.CodeGenerator);org.javacc.parser.Token;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTJavacodeBody);org.javacc.jjtree.NodeScope;0;0;0;0;0
org.javacc.parser.ROneOrMore.GenerateNfa(boolean);org.javacc.parser.RegularExpression;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTCompilationUnit);org.javacc.jjtree.IO;0;0;0;0;0
org.javacc.jjdoc.HTMLGenerator.handleTokenProduction(org.javacc.parser.TokenProduction);org.javacc.jjdoc.JJDoc;0;0;0;0;0
org.javacc.parser.Sequence.dump(int, java.util.Set);org.javacc.parser.Expansion;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.javacode_production();org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0
org.javacc.parser.ExpansionTest.testRStringLiteralConstructor();org.javacc.parser.Expansion;2;1;2;0.9375;0.8823529411764706;6;72;34
org.javacc.parser.ParseEngine.genFirstSet(org.javacc.parser.Expansion);org.javacc.parser.Sequence;0;0;0;0;0
org.javacc.parser.CodeGenerator.saveOutput(java.lang.String, java.lang.StringBuffer);org.javacc.parser.JavaCCErrors;0;0;0;0;0
org.javacc.jjtree.ASTBNFAction.getScopingParent(org.javacc.jjtree.NodeScope);org.javacc.jjtree.ASTExpansionNodeScope;0;0;2;1.0;1.0;15;50;11
org.javacc.parser.JavaCCParser.ReInit(java.io.Reader);org.javacc.parser.JavaCharStream;0;0;0;0;0
org.javacc.parser.RChoice.CheckUnmatchability();org.javacc.parser.LexGen;0;0;0;0;0
org.javacc.utils.ConditionParserTokenManager.jjMoveNfa_0(int, int);org.javacc.utils.JavaCharStream;0;0;0;0;0
org.javacc.parser.JavaCCParser.Block(java.util.List);org.javacc.parser.Token;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFNodeScope);org.javacc.jjtree.IO;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.insertOpenNodeCode(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.NodeFiles;0;0;0;0;0
org.javacc.jjtree.JJTreeOptionsTest.testNodeFactory();org.javacc.jjtree.JJTreeOptions;0;0;0;0;0
org.javacc.jjtree.JJTree.main(java.lang.String[]);org.javacc.jjtree.ASTNodeDescriptor;0;3;10;0.8421052631578947;1.0;76;138;89
org.javacc.jjtree.JJTreeParser.bnf_production();org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0
org.javacc.jjtree.JJTree.main(java.lang.String[]);org.javacc.parser.JavaCCGlobals;0;3;10;0.8421052631578947;1.0;76;138;314
org.javacc.jjtree.JJTree.main(java.lang.String[]);org.javacc.parser.Options;0;3;10;0.8421052631578947;1.0;76;138;309
org.javacc.parser.ExpansionTest.testOneOrMoreConstructor();org.javacc.parser.Expansion;3;1;1;0.9375;0.8125;8;72;34
org.javacc.parser.test.NfaStateTest.testDumpCharAndRangeMoves();org.javacc.parser.NfaState;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTCompilationUnit);org.javacc.jjtree.JJTreeNode;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.jjMoveStringLiteralDfa7_0(long, long, long, long);org.javacc.parser.JavaCharStream;0;0;0;0;0
org.javacc.parser.RSequence.GenerateNfa(boolean);org.javacc.parser.NfaState;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.jjMoveStringLiteralDfa12_0(long, long, long, long);org.javacc.parser.JavaCharStream;0;0;0;0;0
org.javacc.parser.JavaCCParser.ReInit(java.io.InputStream, java.lang.String);org.javacc.parser.JavaCharStream;0;0;0;0;0
org.javacc.parser.JavaCCParser.javacode_production();org.javacc.parser.NormalProduction;0;0;0;0;0
org.javacc.parser.JavaCCParser.local_lookahead();org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.LexGen.DumpMoreActions();org.javacc.parser.CodeGenerator;5;0;2;1.0;0.8571428571428572;44;856;212
org.javacc.parser.RStringLiteral.GenerateNfa(boolean);org.javacc.parser.NfaState;2;1;2;0.9166666666666666;0.967741935483871;23;819;1754
org.javacc.jjtree.JJTreeOptionsTest.testOutputDirectory();org.javacc.parser.Options;0;0;0;0;0
org.javacc.parser.JavaCCParser.ReturnStatement();org.javacc.parser.Options;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.insertCatchBlocks(java.lang.String, java.util.Enumeration, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.IO;0;0;0;0;0
org.javacc.parser.ParseException.getMessage();org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.ParseEngine.minimumSize(int, org.javacc.parser.Expansion);org.javacc.parser.Choice;0;0;0;0;0
org.javacc.parser.JavaCCParser.AccessModifier(org.javacc.parser.NormalProduction);org.javacc.parser.NormalProduction;0;0;0;0;0
org.javacc.parser.ParseEngine.minimumSize(int, org.javacc.parser.Expansion);org.javacc.parser.NonTerminal;1;2;2;0.975;0.9285714285714286;70;1106;28
org.javacc.parser.NfaState.DumpAsciiMove(boolean[], int, org.javacc.parser.CodeGenerator);org.javacc.parser.CodeGenerator;2;8;1;0.875;0.9565217391304348;84;1754;212
org.javacc.parser.test.NfaStateTest.setupState();org.javacc.parser.JavaCCGlobals;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.bnf_production();org.javacc.jjtree.ASTBNFDeclaration;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTJavacodeBody);org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.parser.LexGenCPP.start();org.javacc.parser.RegularExpression;0;0;0;0;0
org.javacc.parser.JavaCCParser.ClassOrInterfaceBody(boolean, java.util.List);org.javacc.parser.Token;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.javacc_input();org.javacc.jjtree.JJTreeOptions;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.ReInit(java.io.InputStream, java.lang.String);org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0
org.javacc.parser.RCharacterList.SortDescriptors();org.javacc.parser.CharacterRange;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion(org.javacc.parser.Container);org.javacc.parser.Options;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.JJTreeNode);org.javacc.jjtree.SimpleNode;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion(org.javacc.parser.Container);org.javacc.parser.Lookahead;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.SwitchTo(int);org.javacc.jjtree.TokenMgrError;0;0;0;0;0
org.javacc.jjdoc.BNFGenerator.handleTokenProduction(org.javacc.parser.TokenProduction);org.javacc.jjdoc.JJDoc;0;0;0;0;0
org.javacc.jjdoc.BNFGenerator.create_output_stream();org.javacc.jjdoc.JJDocGlobals;0;2;2;0.9444444444444444;1.0;34;115;41
org.javacc.parser.JavaCCParserTokenManager.SwitchTo(int);org.javacc.parser.TokenMgrError;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpSkipActions();org.javacc.parser.RStringLiteral;0;0;3;1.0;1.0;45;756;819
org.javacc.parser.JavaCCParser.StringLiteral();org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.RChoice.CheckUnmatchability();org.javacc.parser.JavaCCErrors;0;0;0;0;0
org.javacc.parser.OptionsTest.testSetNonexistentOption();org.javacc.parser.JavaCCErrors;0;0;0;0;0
org.javacc.parser.ParseEngine.javaCodeCheck(org.javacc.parser.Expansion);org.javacc.parser.Lookahead;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.jjtreeCloseNodeScope(org.javacc.jjtree.Node);org.javacc.jjtree.JJTreeNode;0;0;0;0;0
org.javacc.jjdoc.test.JJDocMainTest.testMainProgramText();org.javacc.JavaCCTestCase;0;0;0;0;0
org.javacc.parser.JavaCCParser.regexpr_spec(org.javacc.parser.TokenProduction);org.javacc.parser.Action;0;0;0;0;0
org.javacc.parser.NfaState.AddChar(char);org.javacc.parser.Main;0;4;3;0.9285714285714286;1.0;30;1754;178
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveStringLiteralDfa2_0(long, long, long, long, long, long);org.javacc.jjtree.JavaCharStream;0;0;0;0;0
org.javacc.parser.JavaCCParser.jj_scan_token(int);org.javacc.parser.Token;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.jjFillToken();org.javacc.jjtree.JavaCharStream;0;0;0;0;0
org.javacc.parser.ExpansionTest.testSequenceConstructor();org.javacc.parser.Token;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.regexpr_spec();org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0
org.javacc.parser.ParseEngine.javaCodeCheck(org.javacc.parser.Expansion);org.javacc.parser.Sequence;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.complex_regular_expression_unit();org.javacc.jjtree.JJTreeNode;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.tryTokenSequence(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope, org.javacc.jjtree.Token, org.javacc.jjtree.Token);org.javacc.jjtree.TokenUtils;0;0;0;0;0
org.javacc.parser.Semanticize.action(org.javacc.parser.Expansion);org.javacc.parser.OneOrMore;0;0;0;0;0
org.javacc.parser.ParseGenCPP.start();org.javacc.parser.Options;0;0;4;1.0;1.0;401;404;309
org.javacc.parser.RChoice.GenerateNfa(boolean);org.javacc.parser.NfaState;0;0;0;0;0
org.javacc.parser.JavaCCParser.bnf_production();org.javacc.parser.NormalProduction;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.ReInit(java.io.Reader);org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0
org.javacc.parser.LexGenCPP.start();org.javacc.parser.RStringLiteral;2;9;7;0.8235294117647058;0.9814814814814815;150;756;819
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveStringLiteralDfa1_3(long);org.javacc.jjtree.JavaCharStream;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveStringLiteralDfa12_0(long, long, long, long);org.javacc.jjtree.JavaCharStream;0;0;0;0;0
org.javacc.parser.ParseEngine.javaCodeCheck(org.javacc.parser.Expansion);org.javacc.parser.ZeroOrOne;0;0;0;0;0
org.javacc.parser.JavaCCParser.jj_ntk();org.javacc.parser.JavaCCParserTokenManager;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.PackageDeclaration();org.javacc.jjtree.JJTreeGlobals;0;0;0;0;0
org.javacc.parser.ParseEngine.phase1NewLine();org.javacc.parser.CodeGenerator;2;1;1;0.9705882352941176;0.9393939393939394;6;1106;212
org.javacc.parser.LexGen.DumpGetNextToken();org.javacc.parser.CodeGenerator;1;0;3;1.0;0.972972972972973;212;856;212
org.javacc.parser.RChoice.CheckUnmatchability();org.javacc.parser.Main;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.getNextToken();org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.JavaCCParser.regular_expr_production();org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.JavaCCParser.RSIGNEDSHIFT();org.javacc.parser.Token;0;0;0;0;0
org.javacc.utils.ConditionParserTokenManager.jjFillToken();org.javacc.utils.Token;0;0;0;0;0
org.javacc.jjtree.JJTreeNode.print(org.javacc.jjtree.IO, org.javacc.jjtree.Token);org.javacc.jjtree.IO;1;2;2;0.8888888888888888;0.9523809523809523;47;138;99
org.javacc.jjtree.JJTreeParserDefaultVisitor.defaultVisit(java.lang.Object, org.javacc.jjtree.SimpleNode);org.javacc.jjtree.SimpleNode;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFNodeScope);org.javacc.jjtree.ASTBNFNodeScope;0;0;0;0;0
org.javacc.parser.JavaCCParser.ThrowStatement();org.javacc.parser.Token;0;0;0;0;0
org.javacc.jjdoc.test.JJDocMainTest.testMainProgramText();org.javacc.jjdoc.JJDocMain;0;0;0;0;0
org.javacc.parser.ExpansionTest.testROneOrMoreConstructor();org.javacc.parser.ROneOrMore;1;1;2;0.9375;0.8571428571428572;7;72;17
org.javacc.jjtree.JJTreeParser.local_lookahead(org.javacc.jjtree.ASTProduction);org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.parser.ParseEngine.build(org.javacc.parser.CodeGenerator);org.javacc.parser.JavaCCErrors;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTJavacodeBody);org.javacc.jjtree.JJTreeNode;0;0;0;0;0
org.javacc.parser.LexGen.start();org.javacc.parser.Action;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpStatesForStateInitialised();org.javacc.parser.NfaState;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTCompilationUnit);org.javacc.jjtree.JJTreeGlobals;0;0;0;0;0
org.javacc.parser.OutputFile.checkOptions(java.io.File, java.lang.String[]);org.javacc.parser.Options;0;0;1;1.0;1.0;21;150;309
org.javacc.parser.ExpansionTest.testOneOrMoreConstructor();org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.JavaCCParser.character_list(org.javacc.parser.Container);org.javacc.parser.Expansion;0;0;0;0;0
org.javacc.parser.JavaCCParser.complex_regular_expression_unit(org.javacc.parser.Container);org.javacc.parser.RRepetitionRange;0;0;0;0;0
org.javacc.parser.ParseEngine.javaCodeCheck(org.javacc.parser.Expansion);org.javacc.parser.ZeroOrMore;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion(org.javacc.parser.Container);org.javacc.parser.Expansion;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpGetNextToken();org.javacc.parser.Options;0;0;4;1.0;1.0;225;756;309
org.javacc.parser.LexGenCPP.start();org.javacc.parser.RegExprSpec;3;9;7;0.8235294117647058;0.9411764705882353;150;756;0
org.javacc.jjtree.JJTree.initializeOptions();org.javacc.jjtree.JJTreeOptions;0;0;2;1.0;1.0;4;138;99
org.javacc.utils.ConditionParser.jj_ntk();org.javacc.utils.ConditionParserTokenManager;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpMoreActions();org.javacc.parser.CodeGenerator;6;0;3;1.0;0.8285714285714285;44;756;212
org.javacc.parser.LexGen.DumpGetNextToken();org.javacc.parser.NfaState;2;0;3;1.0;0.9666666666666667;212;856;1754
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFAction);org.javacc.jjtree.SimpleNode;0;0;0;0;0
org.javacc.jjdoc.XTextGenerator.print(java.lang.String);org.javacc.jjdoc.TextGenerator;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase3Routine(boolean, org.javacc.parser.Phase3Data);org.javacc.parser.Lookahead;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.insertCloseNodeAction(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.IO;0;0;0;0;0
org.javacc.parser.LexGen.start();org.javacc.parser.RegExprSpec;3;9;6;0.8333333333333334;0.9361702127659575;144;856;0
org.javacc.jjtree.JJTreeParser.RUNSIGNEDSHIFT();org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.jjdoc.HTMLGenerator.productionStart(org.javacc.parser.NormalProduction);org.javacc.parser.NormalProduction;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTLHS);org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.jjtree.JJTree.main(java.lang.String[]);org.javacc.jjtree.JJTreeState;0;3;10;0.8421052631578947;1.0;76;138;164
org.javacc.parser.JavaCCParser.expansion_choices(org.javacc.parser.Container);org.javacc.parser.Expansion;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.ReInit(java.io.InputStream, java.lang.String);org.javacc.jjtree.JJTreeParserTokenManager;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.insertCatchBlocks(java.lang.String, java.util.Enumeration, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.NodeScope;0;0;0;0;0
org.javacc.parser.NfaState.MergeMoves(org.javacc.parser.NfaState);org.javacc.parser.JavaCCErrors;0;0;0;0;0
org.javacc.jjtree.JJTree.main(java.lang.String[]);org.javacc.jjtree.IO;8;3;10;0.8421052631578947;0.6521739130434783;76;138;99
org.javacc.parser.LexGenCPP.PrintClassHead();org.javacc.parser.CodeGenerator;9;0;3;1.0;0.75;49;756;212
org.javacc.parser.ParseGen.start(boolean);org.javacc.parser.Options;0;0;0;0;0
org.javacc.parser.ParseEngine.generate3R(org.javacc.parser.Expansion, org.javacc.parser.Phase3Data);org.javacc.parser.Expansion;1;3;3;0.9302325581395349;0.9615384615384616;33;1106;34
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFAction);org.javacc.jjtree.NodeScope;0;0;0;0;0
org.javacc.jjtree.ASTBNFAction.getScopingParent(org.javacc.jjtree.NodeScope);org.javacc.jjtree.ASTBNFNodeScope;0;0;2;1.0;1.0;15;50;13
org.javacc.parser.JavaCCParser.getToken(int);org.javacc.parser.Token;0;0;0;0;0
org.javacc.jjdoc.HTMLGenerator.nonTerminalStart(org.javacc.parser.NonTerminal);org.javacc.parser.NonTerminal;1;2;1;0.92;0.875;3;141;28
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTGrammar);org.javacc.parser.JavaCCGlobals;0;0;0;0;0
org.javacc.parser.RChoice.CompressCharLists();org.javacc.parser.RStringLiteral;0;0;0;0;0
org.javacc.jjtree.ASTNodeDescriptorExpression.translateImage(org.javacc.jjtree.Token);org.javacc.jjtree.JJTreeNode;1;0;1;1.0;0.9090909090909091;3;6;138
org.javacc.parser.JavaCCParserTokenManager.jjMoveStringLiteralDfa13_0(long, long);org.javacc.parser.JavaCharStream;0;0;0;0;0
org.javacc.parser.ParseEngine.javaCodeCheck(org.javacc.parser.Expansion);org.javacc.parser.Semanticize;0;0;0;0;0
org.javacc.parser.OptionsTest.testIntBooleanOption();org.javacc.parser.JavaCCErrors;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion_unit(org.javacc.parser.Container);org.javacc.parser.RegularExpression;0;0;0;0;0
org.javacc.parser.LexGen.DumpTokenActions();org.javacc.parser.CodeGenerator;5;0;2;1.0;0.8571428571428572;51;856;212
org.javacc.parser.LexGen.DumpTokenActions();org.javacc.parser.Action;0;0;0;0;0
org.javacc.parser.JavaCCParser.regexpr_spec(org.javacc.parser.TokenProduction);org.javacc.parser.Options;0;0;0;0;0
org.javacc.parser.RCharacterList.ToCaseNeutral();org.javacc.parser.SingleCharacter;0;0;0;0;0
org.javacc.parser.LexGenCPP.start();org.javacc.parser.TokenProduction;3;9;7;0.8235294117647058;0.9464285714285714;150;756;12
org.javacc.utils.ConditionParserTokenManager.jjMoveStringLiteralDfa2_0(long, long);org.javacc.utils.JavaCharStream;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.jj_3R_84();org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpSkipActions();org.javacc.parser.LexGen;0;0;3;1.0;1.0;45;756;856
org.javacc.jjdoc.XTextGenerator.documentStart();org.javacc.jjdoc.JJDocGlobals;0;0;0;0;0
org.javacc.parser.JavaCCParser.CompilationUnit();org.javacc.parser.Options;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.expansion_choices(org.javacc.jjtree.ASTProduction);org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.insertOpenNodeCode(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.IO;0;0;0;0;0
org.javacc.utils.ConditionParserTokenManager.jjFillToken();org.javacc.utils.JavaCharStream;0;0;0;0;0
org.javacc.parser.ParseEngine.javaCodeCheck(org.javacc.parser.Expansion);org.javacc.parser.NonTerminal;1;1;1;0.9743589743589743;0.9230769230769231;58;1106;28
org.javacc.parser.NonTerminal.dump(int, java.util.Set);org.javacc.parser.Expansion;1;1;1;0.8888888888888888;0.9375;4;28;34
org.javacc.parser.OptionsTest.testNormalize();org.javacc.parser.Options;0;0;1;1.0;1.0;14;128;309
org.javacc.jjtree.JJTreeParser.jjtreeOpenNodeScope(org.javacc.jjtree.Node);org.javacc.jjtree.JJTreeNode;0;0;0;0;0
org.javacc.parser.JavaCCParser.regular_expression(org.javacc.parser.Container);org.javacc.parser.Expansion;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.jjStartNfaWithStates_0(int, int, int);org.javacc.jjtree.JavaCharStream;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.insertCloseNodeCode(boolean, java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.JJTreeOptions;0;0;0;0;0
org.javacc.parser.ParseEngine.phase1ExpansionGen(org.javacc.parser.Expansion);org.javacc.parser.OneOrMore;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpSkipActions();org.javacc.parser.Action;0;0;0;0;0
org.javacc.jjtree.JJTreeOptionsTest.testValidate();org.javacc.parser.Options;0;0;0;0;0
org.javacc.parser.OptionsTest.testIntBooleanOption();org.javacc.parser.Options;1;0;1;1.0;1.0;17;128;309
org.javacc.parser.ParseEngine.minimumSize(int, org.javacc.parser.Expansion);org.javacc.parser.TryBlock;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.insertCloseNodeCode(boolean, java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.NodeScope;0;0;0;0;0
org.javacc.parser.LexGenCPP.start();org.javacc.parser.NfaState;7;9;7;0.8235294117647058;0.9292929292929293;150;756;1754
org.javacc.parser.ExpansionTest.testRJustNameConstructor();org.javacc.parser.RegularExpression;0;0;0;0;0
org.javacc.parser.ExpansionTest.testChoiceConstructor();org.javacc.parser.Expansion;2;1;1;0.9411764705882353;0.8888888888888888;9;72;34
org.javacc.parser.JavaCCParser.Name(java.util.List);org.javacc.parser.Token;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.token_manager_decls();org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0
org.javacc.parser.NfaState.DumpNonAsciiMoveForCompositeState(org.javacc.parser.CodeGenerator);org.javacc.parser.Options;0;8;2;0.8769230769230769;1.0;50;1754;309
org.javacc.jjtree.CPPCodeGenerator.getIndentation(int, org.javacc.jjtree.JJTreeNode);org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.RSIGNEDSHIFT();org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.MoreLexicalActions();org.javacc.parser.JavaCharStream;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveNfa_0(int, int);org.javacc.jjtree.JavaCharStream;0;0;0;0;0
org.javacc.parser.JavaCCParser.identifier();org.javacc.parser.Token;0;0;0;0;0
org.javacc.utils.ConditionParserTokenManager.jjMoveStringLiteralDfa4_0(long, long);org.javacc.utils.JavaCharStream;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion(org.javacc.parser.Container);org.javacc.parser.JavaCCErrors;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFDeclaration);org.javacc.jjtree.NodeScope;0;0;0;0;0
org.javacc.parser.ExpansionTest.testRJustNameConstructor();org.javacc.parser.Token;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.getToken(int);org.javacc.jjtree.JJTreeParserTokenManager;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase1Routine(org.javacc.parser.BNFProduction);org.javacc.parser.NormalProduction;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.bnf_production();org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.javacc_input();org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0
org.javacc.parser.NfaState.DumpAsciiMoveForCompositeState(boolean, int, org.javacc.parser.CodeGenerator);org.javacc.parser.CodeGenerator;2;7;1;0.8888888888888888;0.9545454545454546;53;1754;212
org.javacc.parser.LexGen.start();org.javacc.parser.TokenProduction;3;9;6;0.8333333333333334;0.9423076923076923;144;856;12
org.javacc.jjtree.ASTBNF.toString();org.javacc.jjtree.SimpleNode;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.jjMoveStringLiteralDfa6_0(long, long, long, long);org.javacc.parser.JavaCharStream;0;0;0;0;0
org.javacc.parser.OptionsTest.testSetStringOption();org.javacc.parser.Options;1;0;1;1.0;1.0;15;128;309
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFDeclaration);org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.setupState();org.javacc.parser.LexGen;0;0;0;0;0
org.javacc.parser.ParseGen.start(boolean);org.javacc.parser.Token;0;0;0;0;0
org.javacc.jjdoc.XTextGenerator.documentStart();org.javacc.jjdoc.TextGenerator;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTExpansionNodeScope);org.javacc.jjtree.ASTExpansionNodeScope;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase3Routine(boolean, org.javacc.parser.Phase3Data);org.javacc.parser.Options;0;6;5;0.9107142857142857;1.0;148;1106;309
org.javacc.parser.RCharacterList.GenerateNfa(boolean);org.javacc.parser.NfaState;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.tryTokenSequence(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope, org.javacc.jjtree.Token, org.javacc.jjtree.Token);org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.parser.LexGen.start();org.javacc.parser.RChoice;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.regular_expr_production();org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0
org.javacc.parser.ExpansionTest.testChoiceConstructor();org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.RStringLiteral.GenerateDfa(int, org.javacc.parser.CodeGenerator);org.javacc.parser.Main;0;1;5;0.95;1.0;40;819;178
org.javacc.parser.ParseEngine.generateCPPMethodheader(org.javacc.parser.BNFProduction, org.javacc.parser.Token);org.javacc.parser.NormalProduction;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFNodeScope);org.javacc.jjtree.ASTBNFNodeScope;0;0;0;0;0
org.javacc.parser.ExpansionTest.testRStringLiteralConstructor();org.javacc.parser.RStringLiteral;1;1;2;0.9375;0.9;6;72;819
org.javacc.parser.RStringLiteral.GenerateNfa(boolean);org.javacc.parser.RCharacterList;0;0;0;0;0
org.javacc.parser.RSequence.GenerateNfa(boolean);org.javacc.parser.Nfa;0;0;0;0;0
org.javacc.parser.RStringLiteral.GenerateDfa(int, org.javacc.parser.CodeGenerator);org.javacc.parser.LexGen;0;1;5;0.95;1.0;40;819;856
org.javacc.parser.OutputFile.checkVersion(java.io.File, java.lang.String);org.javacc.parser.JavaCCErrors;0;0;0;0;0
org.javacc.parser.JavaCCParser.option_binding();org.javacc.parser.Options;0;0;0;0;0
org.javacc.parser.ParseEngine.generate3R(org.javacc.parser.Expansion, org.javacc.parser.Phase3Data);org.javacc.parser.Sequence;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveStringLiteralDfa11_0(long, long, long, long);org.javacc.jjtree.JavaCharStream;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase1Routine(org.javacc.parser.BNFProduction);org.javacc.parser.JavaCCGlobals;0;0;0;0;0
org.javacc.parser.JavaCCParser.javacc_input();org.javacc.parser.Options;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpMoveNfa();org.javacc.parser.CodeGenerator;0;0;0;0;0
org.javacc.parser.CodeGenerator.getStringForTokenOnly(org.javacc.parser.Token);org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.RZeroOrOne.GenerateNfa(boolean);org.javacc.parser.Nfa;0;0;0;0;0
org.javacc.parser.NfaState.DumpNonAsciiMoveMethod(org.javacc.parser.CodeGenerator);org.javacc.parser.Main;0;3;3;0.9523809523809523;1.0;37;1754;178
org.javacc.parser.RChoice.GenerateNfa(boolean);org.javacc.parser.RegularExpression;0;0;0;0;0
org.javacc.utils.ConditionParserTokenManager.SwitchTo(int);org.javacc.utils.TokenMgrError;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpNonAsciiMoveMethods();org.javacc.parser.NfaState;0;0;0;0;0
org.javacc.parser.ParseEngine.minimumSize(int, org.javacc.parser.Expansion);org.javacc.parser.NormalProduction;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.complex_regular_expression();org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTJavacodeBody);org.javacc.jjtree.ASTJavacodeBody;0;0;0;0;0
org.javacc.parser.ROneOrMore.GenerateNfa(boolean);org.javacc.parser.NfaState;1;1;1;0.75;0.9827586206896551;10;17;1754
org.javacc.parser.ExpansionTest.testRStringLiteralConstructor();org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.LexGen.DumpGetNextToken();org.javacc.parser.Options;0;0;3;1.0;1.0;212;856;309
org.javacc.utils.ConditionParser.getToken(int);org.javacc.utils.ConditionParserTokenManager;0;0;0;0;0
org.javacc.parser.NfaState.AddRange(char, char);org.javacc.parser.JavaCCErrors;0;0;0;0;0
org.javacc.parser.JavaCCParser.JavaIdentifier();org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.JavaCCParser.character_descriptor(org.javacc.parser.Container);org.javacc.parser.Token;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveStringLiteralDfa6_0(long, long, long, long, long, long);org.javacc.jjtree.JavaCharStream;0;0;0;0;0
org.javacc.parser.JavaCCParser.jj_scan_token(int);org.javacc.parser.JavaCCParserTokenManager;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveStringLiteralDfa3_0(long, long, long, long, long, long);org.javacc.jjtree.JavaCharStream;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpMoreActions();org.javacc.parser.Action;0;0;0;0;0
org.javacc.parser.LexGenCPP.PrintClassHead();org.javacc.parser.LexGen;0;0;3;1.0;1.0;49;756;856
org.javacc.parser.ParseEngine.buildPhase3Routine(boolean, org.javacc.parser.Phase3Data);org.javacc.parser.NonTerminal;1;6;5;0.9107142857142857;0.9705882352941176;148;1106;28
org.javacc.jjtree.JJTreeOptionsTest.testValidate();org.javacc.jjtree.JJTreeOptions;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFAction);org.javacc.jjtree.IO;0;0;0;0;0
org.javacc.parser.JavaCCParser.javacc_input();org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.JavaCCParser.javacc_input();org.javacc.parser.JavaCCParserInternals;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFNodeScope);org.javacc.jjtree.NodeScope;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.javacode_production();org.javacc.jjtree.ASTJavacodeBody;0;0;0;0;0
org.javacc.parser.LexGen.DumpTokenActions();org.javacc.parser.RStringLiteral;0;0;2;1.0;1.0;51;856;819
org.javacc.parser.JavaCCParser.expansion_unit(org.javacc.parser.Container);org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.JavaCCParser.regexpr_spec(org.javacc.parser.TokenProduction);org.javacc.parser.JavaCCErrors;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.JavaIdentifier();org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.setupState();org.javacc.parser.JavaCCParser;0;0;0;0;0
org.javacc.parser.ParseEngine.dumpLookaheads(java.lang.String[], org.javacc.parser.Lookahead[]);org.javacc.parser.Lookahead;0;0;0;0;0
org.javacc.jjdoc.HTMLGenerator.nonterminalsStart();org.javacc.jjdoc.JJDocOptions;0;1;1;0.9583333333333334;1.0;6;141;26
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFDeclaration);org.javacc.jjtree.IO;0;0;0;0;0
org.javacc.parser.Semanticize.action(org.javacc.parser.Expansion);org.javacc.parser.ZeroOrOne;0;0;0;0;0
org.javacc.parser.LexGenCPP.start();org.javacc.parser.Action;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.setupState();org.javacc.parser.Options;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveStringLiteralDfa1_0(long, long, long);org.javacc.jjtree.JavaCharStream;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.insertOpenNodeCode(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.NodeScope;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.MoreLexicalActions();org.javacc.jjtree.JavaCharStream;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.jjMoveStringLiteralDfa1_4(long);org.javacc.parser.JavaCharStream;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.getNextToken();org.javacc.parser.JavaCharStream;0;0;0;0;0
org.javacc.parser.LexGen.DumpSkipActions();org.javacc.parser.Action;0;0;0;0;0
org.javacc.parser.ParseEngine.generate3R(org.javacc.parser.Expansion, org.javacc.parser.Phase3Data);org.javacc.parser.NormalProduction;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTGrammar);org.javacc.jjtree.SimpleNode;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.option_binding();org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0
org.javacc.parser.NfaState.AddChar(char);org.javacc.parser.JavaCCErrors;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.bnf_production();org.javacc.jjtree.ASTBNF;0;0;0;0;0
org.javacc.parser.OptionsTest.testOptionsString();org.javacc.parser.Options;0;0;1;1.0;1.0;9;128;309
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.JJTreeNode);org.javacc.jjtree.SimpleNode;0;0;0;0;0
org.javacc.parser.ParseEngine.build(org.javacc.parser.CodeGenerator);org.javacc.parser.CodeGenerator;8;8;3;0.8793103448275862;0.8596491228070176;86;1106;212
org.javacc.utils.ConditionParser.Name();org.javacc.utils.Token;0;0;0;0;0
org.javacc.parser.JavaCCParser.option_binding();org.javacc.parser.Token;0;0;0;0;0
org.javacc.jjdoc.XTextGenerator.handleTokenProduction(org.javacc.parser.TokenProduction);org.javacc.parser.TokenProduction;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.insertOpenNodeAction(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.IO;0;0;0;0;0
org.javacc.jjtree.JJTree.main(java.lang.String[]);org.javacc.parser.Main;0;3;10;0.8421052631578947;1.0;76;138;178
org.javacc.jjtree.JJTreeParser.bnf_production();org.javacc.jjtree.ASTProduction;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTLHS);org.javacc.jjtree.NodeScope;0;0;0;0;0
org.javacc.parser.JavaCCParser.character_list(org.javacc.parser.Container);org.javacc.parser.Container;0;0;0;0;0
org.javacc.parser.ExpansionTest.testZeroOrOneConstructor();org.javacc.parser.ZeroOrOne;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFDeclaration);org.javacc.jjtree.JJTreeNode;0;0;0;0;0
org.javacc.parser.JavaCCParser.complex_regular_expression_choices(org.javacc.parser.Container);org.javacc.parser.Container;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase3Routine(boolean, org.javacc.parser.Phase3Data);org.javacc.parser.NormalProduction;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase3Routine(boolean, org.javacc.parser.Phase3Data);org.javacc.parser.Phase3Data;1;6;5;0.9107142857142857;0.9655172413793104;148;1106;4
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTJavacodeBody);org.javacc.jjtree.NodeScope;0;0;0;0;0
org.javacc.parser.CodeGenerator.isJavaLanguage();org.javacc.parser.Options;0;0;1;1.0;1.0;3;212;309
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTJavacodeBody);org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase3Routine(boolean, org.javacc.parser.Phase3Data);org.javacc.parser.Expansion;2;6;5;0.9107142857142857;0.95;148;1106;34
org.javacc.jjtree.JJTreeParser.javacc_options();org.javacc.parser.Options;0;0;0;0;0
org.javacc.parser.NfaState.DumpNonAsciiMove(boolean[], org.javacc.parser.CodeGenerator);org.javacc.parser.Options;0;9;2;0.8636363636363636;1.0;74;1754;309
org.javacc.jjtree.JJTreeParser.PrimaryExpression();org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase3Routine(boolean, org.javacc.parser.Phase3Data);org.javacc.parser.Sequence;0;0;0;0;0
org.javacc.utils.ConditionParser.ReInit(java.io.Reader);org.javacc.utils.JavaCharStream;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.option_binding();org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.jjtree.JJTree.initializeOptions();org.javacc.jjtree.JJTreeGlobals;0;0;2;1.0;1.0;4;138;32
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTGrammar);org.javacc.jjtree.JJTreeGlobals;0;0;0;0;0
org.javacc.parser.ExpansionTest.testROneOrMoreConstructor();org.javacc.parser.Token;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.jj_3R_85();org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.jjtree.JJTree.main(java.lang.String[]);org.javacc.jjtree.CPPNodeFiles;0;0;0;0;0
org.javacc.parser.ParseEngine.build(org.javacc.parser.CodeGenerator);org.javacc.parser.NormalProduction;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTExpansionNodeScope);org.javacc.jjtree.SimpleNode;0;0;0;0;0
org.javacc.parser.OptionsTest.testDefaults();org.javacc.parser.Options;0;0;1;1.0;1.0;35;128;309
org.javacc.jjtree.JJTreeParser.jj_ntk();org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.jjtree.JJTreeOptionsTest.testNodeClass();org.javacc.jjtree.JJTreeOptions;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.tryTokenSequence(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope, org.javacc.jjtree.Token, org.javacc.jjtree.Token);org.javacc.jjtree.ASTProduction;0;0;0;0;0
org.javacc.jjtree.NodeScope.isVoid();org.javacc.jjtree.ASTNodeDescriptor;1;0;1;1.0;0.9230769230769231;3;187;89
org.javacc.parser.ParseEngine.setupPhase3Builds(org.javacc.parser.Phase3Data);org.javacc.parser.TryBlock;0;0;0;0;0
org.javacc.parser.RCharacterList.SortDescriptors();org.javacc.parser.SingleCharacter;0;0;0;0;0
org.javacc.parser.ParseEngine.build(org.javacc.parser.CodeGenerator);org.javacc.parser.JavaCCGlobals;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTExpansionNodeScope);org.javacc.jjtree.IO;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.TokenLexicalActions(org.javacc.jjtree.Token);org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.parser.OptionsTest.testSetNonexistentOption();org.javacc.parser.Options;1;0;1;1.0;1.0;10;128;309
org.javacc.jjtree.CPPCodeGenerator.insertOpenNodeCode(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.ASTNodeDescriptor;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTExpansionNodeScope);org.javacc.jjtree.NodeScope;0;0;0;0;0
org.javacc.utils.ConditionParserTokenManager.MoreLexicalActions();org.javacc.utils.JavaCharStream;0;0;0;0;0
org.javacc.parser.ExpansionTest.testRZeroOrMoreConstructor();org.javacc.parser.RZeroOrMore;1;1;2;0.9375;0.8571428571428572;7;72;18
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveStringLiteralDfa1_2(long);org.javacc.jjtree.JavaCharStream;0;0;0;0;0
org.javacc.jjdoc.TextGenerator.productionStart(org.javacc.parser.NormalProduction);org.javacc.parser.NormalProduction;0;0;0;0;0
org.javacc.parser.LexGenCPP.dumpBoilerPlateInHeader();org.javacc.parser.Options;0;0;0;0;0
org.javacc.parser.CodeGenerator.printTokenSetup(org.javacc.parser.Token);org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.ParseEngine.generateCPPMethodheader(org.javacc.parser.BNFProduction, org.javacc.parser.Token);org.javacc.parser.CodeGenerator;5;0;1;1.0;0.8936170212765957;39;1106;212
org.javacc.parser.RRepetitionRange.GenerateNfa(boolean);org.javacc.parser.RZeroOrMore;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.node_descriptor_expression();org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0
org.javacc.parser.JavaCCParser.regular_expression(org.javacc.parser.Container);org.javacc.parser.RSequence;0;0;0;0;0
org.javacc.parser.ParseEngine.generate3R(org.javacc.parser.Expansion, org.javacc.parser.Phase3Data);org.javacc.parser.RegularExpression;0;0;0;0;0
org.javacc.parser.NfaState.DumpNonAsciiMoveMethod(org.javacc.parser.CodeGenerator);org.javacc.parser.CodeGenerator;3;3;3;0.9523809523809523;0.9230769230769231;37;1754;212
org.javacc.parser.ParseEngine.javaCodeCheck(org.javacc.parser.Expansion);org.javacc.parser.OneOrMore;0;0;0;0;0
org.javacc.parser.JavaCCParser.regexpr_spec(org.javacc.parser.TokenProduction);org.javacc.parser.Container;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpMoveNfa();org.javacc.parser.NfaState;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFAction);org.javacc.jjtree.IO;0;0;0;0;0
org.javacc.parser.ExpansionTest.testOneOrMoreConstructor();org.javacc.parser.OneOrMore;0;0;0;0;0
org.javacc.parser.JavaCCParser.complex_regular_expression(org.javacc.parser.Container);org.javacc.parser.Container;0;0;0;0;0
org.javacc.jjtree.IO.setOutput();org.javacc.jjtree.JJTreeOptions;0;4;2;0.7142857142857143;1.0;11;99;99
org.javacc.parser.OptionsTest.testSetWrongTypeForOption();org.javacc.parser.JavaCCErrors;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpStateSetsInitialised();org.javacc.parser.NfaState;0;0;0;0;0
org.javacc.jjdoc.HTMLGenerator.documentStart();org.javacc.jjdoc.JJDocOptions;0;1;3;0.962962962962963;1.0;18;141;26
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTLHS);org.javacc.jjtree.JJTreeNode;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.jjMoveNfa_2(int, int);org.javacc.parser.JavaCharStream;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpNonAsciiMoveMethods();org.javacc.parser.CodeGenerator;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTExpansionNodeScope);org.javacc.jjtree.ASTExpansionNodeScope;0;0;0;0;0
org.javacc.parser.LexGenCPP.start();org.javacc.parser.RChoice;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTCompilationUnit);org.javacc.jjtree.JJTreeState;0;0;0;0;0
org.javacc.parser.ParseEngine.phase1ExpansionGen(org.javacc.parser.Expansion);org.javacc.parser.NonTerminal;3;4;3;0.9482758620689655;0.90625;230;1106;28
org.javacc.jjtree.ASTGrammar.generate(org.javacc.jjtree.IO);org.javacc.parser.Options;0;0;0;0;0
org.javacc.jjtree.JJTreeOptionsTest.testNodeFactory();org.javacc.parser.Options;0;0;0;0;0
org.javacc.parser.OptionsTest.testDefaults();org.javacc.parser.JavaCCErrors;0;0;0;0;0
org.javacc.parser.ParseGenCPP.start();org.javacc.parser.JavaCCErrors;0;0;0;0;0
org.javacc.parser.ParseEngine.genFirstSet(org.javacc.parser.Expansion);org.javacc.parser.ZeroOrOne;0;0;0;0;0
org.javacc.parser.LexGenCPP.dumpBoilerPlateInHeader();org.javacc.parser.CodeGenerator;2;0;2;1.0;0.9375;11;756;212
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.JJTreeNode);org.javacc.jjtree.JJTreeNode;0;0;0;0;0
org.javacc.parser.Choice.dump(int, java.util.Set);org.javacc.parser.Expansion;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.getIndentation(int, org.javacc.jjtree.JJTreeNode);org.javacc.jjtree.JJTreeNode;0;0;0;0;0
org.javacc.parser.RRepetitionRange.GenerateNfa(boolean);org.javacc.parser.RZeroOrOne;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFAction);org.javacc.jjtree.ASTBNFAction;0;0;0;0;0
org.javacc.jjtree.ASTNodeDescriptor.expression_text();org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTLHS);org.javacc.jjtree.TokenUtils;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFDeclaration);org.javacc.jjtree.TokenUtils;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.jjMoveStringLiteralDfa3_0(long, long, long, long, long, long);org.javacc.parser.JavaCharStream;0;0;0;0;0
org.javacc.parser.JavaCCParser.jj_3R_93();org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.restoreBeginLineCol();org.javacc.parser.JavaCharStream;0;0;0;0;0
org.javacc.parser.JavaCCParser.complex_regular_expression_choices(org.javacc.parser.Container);org.javacc.parser.Expansion;0;0;0;0;0
org.javacc.parser.ParseEngine.setupPhase3Builds(org.javacc.parser.Phase3Data);org.javacc.parser.ZeroOrOne;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion(org.javacc.parser.Container);org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.LexGen.start();org.javacc.parser.JavaCCErrors;0;0;0;0;0
org.javacc.parser.JavaCCParser.regular_expr_production();org.javacc.parser.JavaCCParserInternals;0;0;0;0;0
org.javacc.parser.ParseEngine.phase1ExpansionGen(org.javacc.parser.Expansion);org.javacc.parser.Choice;0;0;0;0;0
org.javacc.parser.ExpansionTest.testZeroOrMoreConstructor();org.javacc.parser.ZeroOrMore;0;0;0;0;0
org.javacc.parser.ParseEngine.setupPhase3Builds(org.javacc.parser.Phase3Data);org.javacc.parser.Phase3Data;1;3;2;0.9210526315789473;0.8888888888888888;48;1106;4
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTExpansionNodeScope);org.javacc.jjtree.ASTNodeDescriptor;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.tryTokenSequence(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope, org.javacc.jjtree.Token, org.javacc.jjtree.Token);org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.complex_regular_expression_unit();org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0
org.javacc.utils.ConditionParser.getToken(int);org.javacc.utils.Token;0;0;0;0;0
org.javacc.jjdoc.XTextGenerator.handleTokenProduction(org.javacc.parser.TokenProduction);org.javacc.parser.RegExprSpec;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFDeclaration);org.javacc.jjtree.IO;0;0;0;0;0
org.javacc.parser.Semanticize.action(org.javacc.parser.Expansion);org.javacc.parser.ZeroOrMore;0;0;0;0;0
org.javacc.jjtree.JJTree.main(java.lang.String[]);org.javacc.jjtree.JJTreeParser;0;0;0;0;0
org.javacc.parser.LexGen.start();org.javacc.parser.NfaState;7;9;6;0.8333333333333334;0.9263157894736842;144;856;1754
org.javacc.jjtree.JJTree.main(java.lang.String[]);org.javacc.jjtree.JJTreeOptions;0;3;10;0.8421052631578947;1.0;76;138;99
org.javacc.parser.ParseEngine.genFirstSet(org.javacc.parser.Expansion);org.javacc.parser.Lookahead;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.insertOpenNodeCode(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.parser.Options;0;0;0;0;0
org.javacc.jjtree.ASTBNFAction.getScopingParent(org.javacc.jjtree.NodeScope);org.javacc.jjtree.SimpleNode;0;0;0;0;0
org.javacc.parser.JavaCCParser.ReInit(java.io.InputStream, java.lang.String);org.javacc.parser.JavaCCParserTokenManager;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion_unit(org.javacc.parser.Container);org.javacc.parser.Choice;0;0;0;0;0
org.javacc.parser.LexGenCPP.start();org.javacc.parser.CodeGenerator;5;9;7;0.8235294117647058;0.935064935064935;150;756;212
org.javacc.parser.JavaCCParserTokenManager.getNextToken();org.javacc.parser.TokenMgrError;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion_unit(org.javacc.parser.Container);org.javacc.parser.NonTerminal;0;0;0;0;0
org.javacc.parser.ParseEngine.phase1ExpansionGen(org.javacc.parser.Expansion);org.javacc.parser.Sequence;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveStringLiteralDfa10_0(long, long, long, long);org.javacc.jjtree.JavaCharStream;0;0;0;0;0
org.javacc.jjtree.JJTreeOptionsTest.testNodeFactory();org.javacc.parser.JavaCCErrors;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase1Routine(org.javacc.parser.BNFProduction);org.javacc.parser.CodeGenerator;7;5;2;0.9090909090909091;0.8679245283018868;80;1106;212
org.javacc.jjtree.JJTreeParser.ReInit(java.io.Reader);org.javacc.jjtree.JavaCharStream;0;0;0;0;0
org.javacc.parser.ParseEngine.build(org.javacc.parser.CodeGenerator);org.javacc.parser.JavaCodeProduction;1;8;3;0.8793103448275862;0.9696969696969697;86;1106;3
org.javacc.jjtree.IO.setInput(java.lang.String);org.javacc.parser.Options;0;2;2;0.8823529411764706;1.0;28;99;309
org.javacc.parser.ParseEngine.buildPhase1Routine(org.javacc.parser.BNFProduction);org.javacc.parser.BNFProduction;0;0;0;0;0
org.javacc.parser.JavaCCParser.character_descriptor(org.javacc.parser.Container);org.javacc.parser.Container;0;0;0;0;0
org.javacc.parser.ExpansionTest.testZeroOrMoreConstructor();org.javacc.parser.Expansion;3;1;1;0.9375;0.8125;7;72;34
org.javacc.parser.LexGenCPP.PrintClassHead();org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase3Routine(boolean, org.javacc.parser.Phase3Data);org.javacc.parser.RegularExpression;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.insertCatchBlocks(java.lang.String, java.util.Enumeration, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.NodeScope;0;0;0;0;0
org.javacc.parser.ExpansionTest.testSequenceConstructor();org.javacc.parser.Sequence;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpStatesForKindInitialised();org.javacc.parser.CodeGenerator;0;0;0;0;0
org.javacc.parser.JavaCCParser.local_lookahead();org.javacc.parser.Container;0;0;0;0;0
org.javacc.parser.LexGen.DumpFillToken();org.javacc.parser.CodeGenerator;1;0;3;1.0;0.9696969696969697;69;856;212
org.javacc.parser.JavaCCParser.regular_expr_production();org.javacc.parser.Options;0;0;0;0;0
org.javacc.parser.NfaState.GenerateNonAsciiMoves(org.javacc.parser.CodeGenerator);org.javacc.parser.CodeGenerator;4;5;1;0.9253731343283582;0.9090909090909091;110;1754;212
org.javacc.parser.test.NfaStateTest.setUp();org.javacc.parser.Options;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase1Routine(org.javacc.parser.BNFProduction);org.javacc.parser.Token;0;0;0;0;0
org.javacc.jjtree.ASTNodeDescriptor.expression_text();org.javacc.jjtree.JJTreeNode;2;0;1;1.0;0.8571428571428572;15;89;138
org.javacc.parser.JavaCCParser.complex_regular_expression_unit(org.javacc.parser.Container);org.javacc.parser.Container;0;0;0;0;0
org.javacc.jjtree.JJTreeNode.print(org.javacc.jjtree.IO, org.javacc.jjtree.Token);org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.parser.JavaCCParser.regexpr_spec(org.javacc.parser.TokenProduction);org.javacc.parser.Token;0;0;0;0;0
org.javacc.utils.ConditionParserTokenManager.jjMoveNfa_1(int, int);org.javacc.utils.JavaCharStream;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.insertCloseNodeCode(boolean, java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.ASTNodeDescriptor;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.insertOpenNodeCode(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.JJTreeOptions;0;0;0;0;0
org.javacc.jjtree.JJTreeOptionsTest.testNodeClass();org.javacc.parser.JavaCCErrors;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.javacc_input();org.javacc.jjtree.JJTreeGlobals;0;0;0;0;0
org.javacc.parser.JavaCCParser.notTailOfExpansionUnit();org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.JavaCCParser.AccessModifier(org.javacc.parser.NormalProduction);org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase2Routine(org.javacc.parser.Lookahead);org.javacc.parser.Expansion;1;3;3;0.925;0.9565217391304348;21;1106;34
org.javacc.parser.LexGen.DumpMoreActions();org.javacc.parser.RStringLiteral;0;0;2;1.0;1.0;44;856;819
org.javacc.parser.RChoice.CompressChoices();org.javacc.parser.RJustName;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.JJTreeNode);org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveStringLiteralDfa13_0(long, long);org.javacc.jjtree.JavaCharStream;0;0;0;0;0
org.javacc.parser.LexGen.DumpSkipActions();org.javacc.parser.RStringLiteral;0;0;2;1.0;1.0;45;856;819
org.javacc.jjtree.CPPCodeGenerator.insertOpenNodeCode(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.IO;0;0;0;0;0
org.javacc.jjdoc.HTMLGenerator.documentStart();org.javacc.jjdoc.TextGenerator;2;1;3;0.962962962962963;0.9285714285714286;18;141;108
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveStringLiteralDfa9_0(long, long, long, long);org.javacc.jjtree.JavaCharStream;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpFillToken();org.javacc.parser.CodeGenerator;3;0;4;1.0;0.9090909090909091;68;756;212
org.javacc.parser.NfaState.DumpNonAsciiMoveForCompositeState(org.javacc.parser.CodeGenerator);org.javacc.parser.CodeGenerator;2;8;2;0.8769230769230769;0.9574468085106383;50;1754;212
org.javacc.jjtree.JJTreeParser.getToken(int);org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFDeclaration);org.javacc.jjtree.JJTreeNode;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.insertOpenNodeCode(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.JJTreeOptions;0;0;0;0;0
org.javacc.parser.JavaCCParser.complex_regular_expression(org.javacc.parser.Container);org.javacc.parser.RSequence;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.getNextToken();org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.parser.ParseEngine.javaCodeCheck(org.javacc.parser.Expansion);org.javacc.parser.NormalProduction;0;0;0;0;0
org.javacc.parser.RCharacterList.RemoveNegation();org.javacc.parser.SingleCharacter;0;0;0;0;0
org.javacc.parser.OptionsTest.testSetWrongTypeForOption();org.javacc.parser.Options;1;0;1;1.0;1.0;11;128;309
org.javacc.parser.LexGen.PrintClassHead();org.javacc.parser.CodeGenerator;8;0;2;1.0;0.7894736842105263;63;856;212
org.javacc.parser.RCharacterList.RemoveNegation();org.javacc.parser.Options;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.tryExpansionUnit(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.JJTreeNode, org.javacc.jjtree.NodeScope);org.javacc.jjtree.SimpleNode;0;0;0;0;0
org.javacc.parser.LexGen.DumpFillToken();org.javacc.parser.JavaFiles;0;0;3;1.0;1.0;69;856;290
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFAction);org.javacc.jjtree.JJTreeNode;0;0;0;0;0
org.javacc.jjtree.ASTGrammar.generate(org.javacc.jjtree.IO);org.javacc.jjtree.JavaCodeGenerator;0;0;0;0;0
org.javacc.parser.RCharacterList.GenerateNfa(boolean);org.javacc.parser.Options;0;0;0;0;0
org.javacc.parser.RStringLiteral.dump(int, java.util.Set);org.javacc.parser.RegularExpression;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveStringLiteralDfa14_0(long, long);org.javacc.jjtree.JavaCharStream;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.option_binding();org.javacc.jjtree.ASTOptionBinding;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.SkipLexicalActions(org.javacc.parser.Token);org.javacc.parser.JavaCharStream;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.jjStartNfaWithStates_0(int, int, int);org.javacc.parser.JavaCharStream;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.jjMoveStringLiteralDfa2_0(long, long, long, long, long, long);org.javacc.parser.JavaCharStream;0;0;0;0;0
org.javacc.parser.LexGen.start();org.javacc.parser.Nfa;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.option_binding();org.javacc.parser.Options;0;0;0;0;0
org.javacc.parser.JavaCCParser.IntegerLiteral();org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.ParseEngine.phase1ExpansionGen(org.javacc.parser.Expansion);org.javacc.parser.ZeroOrMore;0;0;0;0;0
org.javacc.parser.JavaCCParser.complex_regular_expression_choices(org.javacc.parser.Container);org.javacc.parser.RChoice;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTGrammar);org.javacc.parser.Options;0;0;0;0;0
org.javacc.parser.ParseGen.start(boolean);org.javacc.parser.ParseEngine;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpGetNextToken();org.javacc.parser.CodeGenerator;4;0;4;1.0;0.8918918918918919;225;756;212
org.javacc.jjtree.JavaCodeGenerator.insertCloseNodeAction(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.IO;0;0;0;0;0
org.javacc.parser.LexGen.DumpStaticVarDeclarations(java.lang.String);org.javacc.parser.CodeGenerator;3;1;1;1.0;0.9117647058823529;52;856;212
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveNfa_1(int, int);org.javacc.jjtree.JavaCharStream;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpStatesForStateInitialised();org.javacc.parser.CodeGenerator;0;0;0;0;0
org.javacc.jjtree.JJTree.main(java.lang.String[]);org.javacc.jjtree.CPPJJTreeState;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.jjFillToken();org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.ParseEngine.phase1ExpansionGen(org.javacc.parser.Expansion);org.javacc.parser.JavaCCGlobals;0;0;0;0;0
org.javacc.parser.ParseEngine.phase1ExpansionGen(org.javacc.parser.Expansion);org.javacc.parser.ZeroOrOne;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpMoreActions();org.javacc.parser.RStringLiteral;0;0;3;1.0;1.0;44;756;819
org.javacc.parser.ParseEngine.minimumSize(int, org.javacc.parser.Expansion);org.javacc.parser.Expansion;1;2;2;0.975;0.9523809523809523;70;1106;34
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTGrammar);org.javacc.jjtree.SimpleNode;0;0;0;0;0
org.javacc.utils.ConditionParserTokenManager.getNextToken();org.javacc.utils.TokenMgrError;0;0;0;0;0
org.javacc.parser.NfaState.GenerateNonAsciiMoves(org.javacc.parser.CodeGenerator);org.javacc.parser.Options;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpFillToken();org.javacc.parser.Options;0;0;4;1.0;1.0;68;756;309
org.javacc.parser.JavaCCParser.complex_regular_expression_unit(org.javacc.parser.Container);org.javacc.parser.Expansion;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.jj_ntk();org.javacc.jjtree.JJTreeParserTokenManager;0;0;0;0;0
org.javacc.parser.ParseEngine.genFirstSet(org.javacc.parser.Expansion);org.javacc.parser.Semanticize;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.jjMoveStringLiteralDfa1_3(long);org.javacc.parser.JavaCharStream;0;0;0;0;0
org.javacc.parser.ParseEngine.build(org.javacc.parser.CodeGenerator);org.javacc.parser.Options;0;8;3;0.8793103448275862;1.0;86;1106;309
org.javacc.parser.test.NfaStateTest.testDumpMoveNfaInitialised();org.javacc.parser.CodeGenerator;0;0;0;0;0
org.javacc.parser.JavaCCParser.bnf_production();org.javacc.parser.BNFProduction;0;0;0;0;0
org.javacc.jjtree.JJTreeOptionsTest.testOutputDirectory();org.javacc.parser.JavaCCErrors;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.getNextToken();org.javacc.jjtree.TokenMgrError;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.JJTreeNode);org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.expansion_unit(org.javacc.jjtree.ASTProduction);org.javacc.jjtree.JJTreeNode;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTExpansionNodeScope);org.javacc.jjtree.IO;0;0;0;0;0
org.javacc.parser.ParseEngine.genReturn(boolean);org.javacc.parser.NormalProduction;0;0;0;0;0
org.javacc.jjdoc.HTMLGenerator.documentEnd();org.javacc.jjdoc.TextGenerator;1;1;1;0.9615384615384616;0.9642857142857143;5;141;108
org.javacc.parser.JavaCCParser.character_descriptor(org.javacc.parser.Container);org.javacc.parser.JavaCCParserInternals;0;0;0;0;0
org.javacc.jjdoc.test.JJDocMainTest.testMainProgramHTML();org.javacc.JavaCCTestCase;0;0;0;0;0
org.javacc.jjtree.ASTNodeDescriptor.getNodeType();org.javacc.jjtree.JJTreeOptions;0;1;1;0.9230769230769231;1.0;8;89;99
org.javacc.parser.OneOrMore.dump(int, java.util.Set);org.javacc.parser.Expansion;0;0;0;0;0
org.javacc.parser.RZeroOrMore.GenerateNfa(boolean);org.javacc.parser.RegularExpression;0;0;0;0;0
org.javacc.jjtree.JJTree.main(java.lang.String[]);org.javacc.jjtree.JJTreeGlobals;0;3;10;0.8421052631578947;1.0;76;138;32
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFAction);org.javacc.jjtree.ASTBNFAction;0;0;0;0;0
org.javacc.parser.NfaState.PrintNoBreak(boolean[], int, org.javacc.parser.CodeGenerator);org.javacc.parser.CodeGenerator;1;6;1;0.9137931034482758;0.9736842105263158;17;1754;212
org.javacc.parser.test.NfaStateTest.testDumpStatesForState();org.javacc.parser.NfaState;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpGetNextToken();org.javacc.parser.LexGen;0;0;4;1.0;1.0;225;756;856
org.javacc.parser.NfaState.AddRange(char, char);org.javacc.parser.LexGen;0;3;3;0.9464285714285714;1.0;36;1754;856
org.javacc.parser.RStringLiteral.GenerateNfa(boolean);org.javacc.parser.Options;0;1;2;0.9166666666666666;1.0;23;819;309
org.javacc.parser.test.NfaStateTest.testDumpStateSetsInitialised();org.javacc.parser.CodeGenerator;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.tryExpansionUnit(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.JJTreeNode, org.javacc.jjtree.NodeScope);org.javacc.jjtree.IO;0;0;0;0;0
org.javacc.parser.RCharacterList.RemoveNegation();org.javacc.parser.NfaState;0;0;0;0;0
org.javacc.jjdoc.BNFGenerator.productionStart(org.javacc.parser.NormalProduction);org.javacc.parser.NormalProduction;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.character_list();org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0
org.javacc.utils.ConditionParser.ReInit(java.io.InputStream, java.lang.String);org.javacc.utils.ConditionParserTokenManager;0;0;0;0;0
org.javacc.parser.JavaCCParser.javacc_input();org.javacc.parser.JavaCCGlobals;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.node_descriptor();org.javacc.jjtree.ASTNodeDescriptor;0;0;0;0;0
org.javacc.parser.JavaCCParser.regexpr_kind(org.javacc.parser.TokenProduction);org.javacc.parser.TokenProduction;0;0;0;0;0
org.javacc.parser.ExpansionTest.testRJustNameConstructor();org.javacc.parser.Expansion;2;1;1;0.9375;0.8823529411764706;6;72;34
org.javacc.parser.JavaCCParser.StringLiteral();org.javacc.parser.JavaCCParserInternals;0;0;0;0;0
org.javacc.parser.JavaCCParser.javacc_options();org.javacc.parser.Options;0;0;0;0;0
org.javacc.parser.JavaCCParser.FormalParameters(java.util.List);org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpTokenActions();org.javacc.parser.LexGen;0;0;3;1.0;1.0;51;756;856
org.javacc.parser.LexGenCPP.PrintClassHead();org.javacc.parser.Options;0;0;3;1.0;1.0;49;756;309
org.javacc.parser.JavaCCParser.regular_expression(org.javacc.parser.Container);org.javacc.parser.RegularExpression;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTCompilationUnit);org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.jjtree.IO.setOutput();org.javacc.parser.JavaCCGlobals;0;4;2;0.7142857142857143;1.0;11;99;314
org.javacc.jjtree.JavaCodeGenerator.insertCloseNodeCode(boolean, java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.IO;0;0;0;0;0
org.javacc.parser.ParseEngine.phase1ExpansionGen(org.javacc.parser.Expansion);org.javacc.parser.Action;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.ReInit(java.io.InputStream, java.lang.String);org.javacc.jjtree.JavaCharStream;0;0;0;0;0
org.javacc.jjtree.IO.setInput(java.lang.String);org.javacc.parser.JavaCCGlobals;0;2;2;0.8823529411764706;1.0;28;99;314
org.javacc.jjtree.JJTreeParser.option_binding();org.javacc.jjtree.TokenUtils;0;0;0;0;0
org.javacc.parser.ExpansionTest.testChoiceConstructor();org.javacc.parser.Choice;0;0;0;0;0
org.javacc.parser.JavaCCParser.bnf_production();org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.ExpansionTest.testSequenceConstructor();org.javacc.parser.Expansion;2;1;1;0.9411764705882353;0.8888888888888888;7;72;34
org.javacc.jjtree.JJTreeParser.bnf_production();org.javacc.jjtree.JJTreeGlobals;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.setupState();org.javacc.parser.Semanticize;0;0;0;0;0
org.javacc.jjtree.ParseException.getMessage();org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.jjdoc.XTextGenerator.handleTokenProduction(org.javacc.parser.TokenProduction);org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.JavaCCParser.ResultType(java.util.List);org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion_unit(org.javacc.parser.Container);org.javacc.parser.Sequence;0;0;0;0;0
org.javacc.utils.ConditionParserTokenManager.jjMoveStringLiteralDfa1_3(long);org.javacc.utils.JavaCharStream;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.JJTreeNode);org.javacc.jjtree.JJTreeNode;0;0;0;0;0
org.javacc.jjtree.JJTree.main(java.lang.String[]);org.javacc.jjtree.SimpleNode;0;0;0;0;0
org.javacc.jjtree.JJTreeNode.jjtAddChild(int, org.javacc.jjtree.Node);org.javacc.jjtree.SimpleNode;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveStringLiteralDfa4_0(long, long, long, long, long, long);org.javacc.jjtree.JavaCharStream;0;0;0;0;0
org.javacc.utils.ConditionParser.ReInit(java.io.InputStream, java.lang.String);org.javacc.utils.JavaCharStream;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpStatesForState();org.javacc.parser.CodeGenerator;0;0;0;0;0
org.javacc.parser.Action.dump(int, java.util.Set);org.javacc.parser.Expansion;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.insertCloseNodeCode(boolean, java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.NodeScope;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFNodeScope);org.javacc.jjtree.ASTNodeDescriptor;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpStateSets();org.javacc.parser.CodeGenerator;0;0;0;0;0
org.javacc.jjtree.ASTBNF.toString();org.javacc.jjtree.ASTProduction;1;0;1;1.0;0.8333333333333334;3;8;11
org.javacc.parser.ParseEngine.phase1ExpansionGen(org.javacc.parser.Expansion);org.javacc.parser.Lookahead;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.insertCloseNodeCode(boolean, java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.IO;0;0;0;0;0
org.javacc.parser.JavaCCParser.regexpr_spec(org.javacc.parser.TokenProduction);org.javacc.parser.RegExprSpec;0;0;0;0;0
org.javacc.parser.JavaCCParser.complex_regular_expression(org.javacc.parser.Container);org.javacc.parser.Expansion;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.tryExpansionUnit(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.JJTreeNode, org.javacc.jjtree.NodeScope);org.javacc.jjtree.NodeScope;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.TokenLexicalActions(org.javacc.parser.Token);org.javacc.parser.Token;0;0;0;0;0
org.javacc.jjdoc.TextGenerator.handleTokenProduction(org.javacc.parser.TokenProduction);org.javacc.jjdoc.JJDoc;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.insertOpenNodeAction(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.IO;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFDeclaration);org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.parser.LexGen.start();org.javacc.parser.RStringLiteral;2;9;6;0.8333333333333334;0.98;144;856;819
org.javacc.parser.test.NfaStateTest.testDumpStatesForKindInitialised();org.javacc.parser.NfaState;0;0;0;0;0
org.javacc.parser.ParseEngine.buildLookaheadChecker(java.lang.String[], org.javacc.parser.Lookahead[]);org.javacc.parser.CodeGenerator;3;8;3;0.8181818181818181;0.9387755102040817;161;1106;212
org.javacc.parser.ParseEngine.phase1ExpansionGen(org.javacc.parser.Expansion);org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.RJustName.GenerateNfa(boolean);org.javacc.parser.RegularExpression;0;0;0;0;0
org.javacc.jjtree.ASTGrammar.generate(org.javacc.jjtree.IO);org.javacc.jjtree.CPPNodeFiles;0;0;0;0;0
org.javacc.parser.ExpansionTest.testZeroOrMoreConstructor();org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.JavaCCParser.javacc_options();org.javacc.parser.Token;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTJavacodeBody);org.javacc.jjtree.IO;0;0;0;0;0
org.javacc.jjtree.JJTreeNode.whiteOut(org.javacc.jjtree.Token);org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.jjdoc.HTMLGenerator.documentStart();org.javacc.jjdoc.JJDocGlobals;0;1;3;0.962962962962963;1.0;18;141;41
org.javacc.parser.ParseGen.start(boolean);org.javacc.parser.CodeGenerator;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFDeclaration);org.javacc.jjtree.NodeScope;0;0;0;0;0
org.javacc.parser.JavaCCParser.ClassOrInterfaceDeclaration(int, java.util.List);org.javacc.parser.JavaCCParserInternals;0;0;0;0;0
org.javacc.parser.LexGen.DumpSkipActions();org.javacc.parser.CodeGenerator;5;0;2;1.0;0.8571428571428572;45;856;212
org.javacc.parser.ExpansionTest.testRZeroOrMoreConstructor();org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.LexGenCPP.dumpBoilerPlateInHeader();org.javacc.parser.LexGen;0;0;2;1.0;1.0;11;756;856
org.javacc.parser.ParseEngine.buildLookaheadChecker(java.lang.String[], org.javacc.parser.Lookahead[]);org.javacc.parser.Lookahead;0;0;0;0;0
org.javacc.utils.ConditionParser.getNextToken();org.javacc.utils.Token;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.tryTokenSequence(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope, org.javacc.jjtree.Token, org.javacc.jjtree.Token);org.javacc.jjtree.NodeScope;0;0;0;0;0
org.javacc.parser.CodeGenerator.getLeadingComments(org.javacc.parser.Token);org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.LexGenCPP.PrintClassHead();org.javacc.parser.JavaCCErrors;0;0;0;0;0
org.javacc.jjdoc.HTMLGenerator.productionStart(org.javacc.parser.NormalProduction);org.javacc.jjdoc.JJDocOptions;0;3;1;0.88;1.0;11;141;26
org.javacc.parser.ParseGenCPP.start();org.javacc.parser.JavaCCGlobals;0;0;4;1.0;1.0;401;404;314
org.javacc.parser.ParseEngine.genjj_3Call(org.javacc.parser.Expansion);org.javacc.parser.Expansion;1;0;1;1.0;0.9285714285714286;4;1106;34
org.javacc.jjtree.JavaCodeGenerator.getIndentation(int, org.javacc.jjtree.JJTreeNode);org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.parser.JavaCCParser.javacode_production();org.javacc.parser.Token;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTGrammar);org.javacc.jjtree.IO;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.jjMoveStringLiteralDfa14_0(long, long);org.javacc.parser.JavaCharStream;0;0;0;0;0
org.javacc.parser.ParseEngine.buildLookaheadChecker(java.lang.String[], org.javacc.parser.Lookahead[]);org.javacc.parser.Options;0;8;3;0.8181818181818181;1.0;161;1106;309
org.javacc.parser.RStringLiteral.toString();org.javacc.parser.Expansion;1;1;1;0.8333333333333334;0.9285714285714286;3;819;34
org.javacc.jjdoc.XTextGenerator.documentEnd();org.javacc.jjdoc.TextGenerator;0;0;0;0;0
org.javacc.parser.JavaCCParser.regexpr_spec(org.javacc.parser.TokenProduction);org.javacc.parser.TokenProduction;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTGrammar);org.javacc.jjtree.IO;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.TokenLexicalActions(org.javacc.parser.Token);org.javacc.parser.JavaCharStream;0;0;0;0;0
org.javacc.parser.LexGen.DumpMoreActions();org.javacc.parser.Action;0;0;0;0;0
org.javacc.parser.LexGen.writeTemplate(java.lang.Object[], java.lang.String);org.javacc.utils.JavaFileGenerator;1;0;3;1.0;0.95;32;856;107
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTGrammar);org.javacc.jjtree.JJTreeGlobals;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion_unit(org.javacc.parser.Container);org.javacc.parser.Expansion;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFNodeScope);org.javacc.jjtree.NodeScope;0;0;0;0;0
org.javacc.parser.NfaState.DumpNonAsciiMoveMethod(org.javacc.parser.CodeGenerator);org.javacc.parser.Options;0;0;0;0;0
org.javacc.parser.JavaCCParser.local_lookahead();org.javacc.parser.Expansion;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion_choices(org.javacc.parser.Container);org.javacc.parser.Choice;0;0;0;0;0
org.javacc.parser.ParseEngine.phase1ExpansionGen(org.javacc.parser.Expansion);org.javacc.parser.TryBlock;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.complex_regular_expression_choices();org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.tryTokenSequence(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope, org.javacc.jjtree.Token, org.javacc.jjtree.Token);org.javacc.jjtree.IO;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpMoveNfaInitialised();org.javacc.parser.NfaState;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase1Routine(org.javacc.parser.BNFProduction);org.javacc.parser.Options;0;5;2;0.9090909090909091;1.0;80;1106;309
org.javacc.parser.JavaCCParser.getNextToken();org.javacc.parser.JavaCCParserTokenManager;0;0;0;0;0
org.javacc.parser.CodeGenerator.getTrailingComments(org.javacc.parser.Token);org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpSkipActions();org.javacc.parser.CodeGenerator;6;0;3;1.0;0.8285714285714285;45;756;212
org.javacc.parser.CodeGenerator.genClassStart(java.lang.String, java.lang.String, java.lang.String[], java.lang.String[]);org.javacc.parser.Options;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpCharAndRangeMoves();org.javacc.parser.CodeGenerator;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion(org.javacc.parser.Container);org.javacc.parser.Sequence;0;0;0;0;0
org.javacc.jjdoc.BNFGenerator.create_output_stream();org.javacc.jjdoc.JJDocOptions;0;2;2;0.9444444444444444;1.0;34;115;26
org.javacc.jjtree.JJTreeOptionsTest.testValidateReturnType();org.javacc.parser.JavaCCErrors;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTExpansionNodeScope);org.javacc.jjtree.ASTNodeDescriptor;0;0;0;0;0
org.javacc.parser.JavaCCParser.local_lookahead();org.javacc.parser.Lookahead;0;0;0;0;0
org.javacc.parser.RCharacterList.GenerateNfa(boolean);org.javacc.parser.Nfa;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion_unit(org.javacc.parser.Container);org.javacc.parser.JavaCCParserInternals;0;0;0;0;0
org.javacc.parser.LexGen.PrintClassHead();org.javacc.parser.Options;0;0;2;1.0;1.0;63;856;309
org.javacc.parser.LexGenCPP.DumpTokenActions();org.javacc.parser.Action;0;0;0;0;0
org.javacc.parser.RCharacterList.RemoveNegation();org.javacc.parser.CharacterRange;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.tryExpansionUnit(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.JJTreeNode, org.javacc.jjtree.NodeScope);org.javacc.jjtree.SimpleNode;0;0;0;0;0
org.javacc.parser.JavaCCParser.Expression(java.util.List);org.javacc.parser.Token;0;0;0;0;0
org.javacc.parser.JavaCCParser.character_list(org.javacc.parser.Container);org.javacc.parser.RCharacterList;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.jjMoveStringLiteralDfa10_0(long, long, long, long);org.javacc.parser.JavaCharStream;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase3Routine(boolean, org.javacc.parser.Phase3Data);org.javacc.parser.OneOrMore;0;0;0;0;0
org.javacc.parser.RRepetitionRange.GenerateNfa(boolean);org.javacc.parser.RSequence;0;0;0;0;0
org.javacc.parser.NfaState.AddRange(char, char);org.javacc.parser.Main;0;3;3;0.9464285714285714;1.0;36;1754;178
org.javacc.jjtree.IO.create_output_file_name(java.lang.String);org.javacc.jjtree.JJTreeOptions;0;0;1;1.0;1.0;23;99;99
org.javacc.jjtree.JJTreeParser.javacc_input();org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTJavacodeBody);org.javacc.jjtree.ASTJavacodeBody;0;0;0;0;0
org.javacc.parser.ParseEngine.setupPhase3Builds(org.javacc.parser.Phase3Data);org.javacc.parser.OneOrMore;0;0;0;0;0
org.javacc.parser.ParseEngine.genFirstSet(org.javacc.parser.Expansion);org.javacc.parser.NormalProduction;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpDebugMethods();org.javacc.parser.LexGen;1;0;1;1.0;1.0;3;756;856
org.javacc.parser.ExpansionTest.setUp();org.javacc.parser.Token;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTLHS);org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.parser.LexGenCPP.start();org.javacc.parser.JavaCCErrors;0;0;0;0;0
org.javacc.parser.OutputFile.getPrintWriter();org.javacc.parser.Options;0;6;3;0.7;1.0;19;150;309
org.javacc.parser.RegularExpression.dump(int, java.util.Set);org.javacc.parser.Expansion;0;0;0;0;0
org.javacc.jjtree.JJTree.p(java.lang.String);org.javacc.jjtree.IO;1;0;1;1.0;0.9285714285714286;3;138;99
org.javacc.parser.ParseEngine.generate3R(org.javacc.parser.Expansion, org.javacc.parser.Phase3Data);org.javacc.parser.NonTerminal;1;3;3;0.9302325581395349;0.9473684210526316;33;1106;28
org.javacc.jjtree.JavaCodeGenerator.insertCloseNodeCode(boolean, java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.JJTreeOptions;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.jjMoveStringLiteralDfa9_0(long, long, long, long);org.javacc.parser.JavaCharStream;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion_unit(org.javacc.parser.Container);org.javacc.parser.Lookahead;0;0;0;0;0
org.javacc.jjtree.JJTree.main(java.lang.String[]);org.javacc.jjtree.ASTGrammar;1;3;10;0.8421052631578947;0.9444444444444444;76;138;8
org.javacc.parser.LexGen.PrintClassHead();org.javacc.parser.JavaCCErrors;0;0;0;0;0
org.javacc.parser.RCharacterList.GenerateNfa(boolean);org.javacc.parser.CharacterRange;0;0;0;0;0
org.javacc.jjtree.JJTreeNode.translateImage(org.javacc.jjtree.Token);org.javacc.jjtree.Token;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpNonAsciiMoveMethodsInitialised();org.javacc.parser.NfaState;0;0;0;0;0
org.javacc.parser.ParseEngine.genFirstSet(org.javacc.parser.Expansion);org.javacc.parser.TryBlock;0;0;0;0;0
org.javacc.parser.RZeroOrMore.GenerateNfa(boolean);org.javacc.parser.Nfa;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.jj_consume_token(int);org.javacc.jjtree.JJTreeParserTokenManager;0;0;0;0;0
org.javacc.parser.ParseEngine.phase1ExpansionGen(org.javacc.parser.Expansion);org.javacc.parser.CodeGenerator;3;4;3;0.9482758620689655;0.9482758620689655;230;1106;212
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTCompilationUnit);org.javacc.jjtree.JJTreeNode;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFDeclaration);org.javacc.jjtree.ASTBNFDeclaration;0;0;0;0;0
org.javacc.parser.NfaState.DumpNonAsciiMove(boolean[], org.javacc.parser.CodeGenerator);org.javacc.parser.CodeGenerator;2;9;2;0.8636363636363636;0.9591836734693877;74;1754;212
org.javacc.parser.ParseEngine.setupPhase3Builds(org.javacc.parser.Phase3Data);org.javacc.parser.ZeroOrMore;0;0;0;0;0
org.javacc.parser.JavaCCParser.jj_3R_92();org.javacc.parser.Token;0;0;0;0;0
org.javacc.jjdoc.XTextGenerator.handleTokenProduction(org.javacc.parser.TokenProduction);org.javacc.jjdoc.JJDoc;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.getNextToken();org.javacc.jjtree.JJTreeParserTokenManager;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.insertOpenNodeCode(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.NodeScope;0;0;0;0;0
org.javacc.utils.ConditionParser.jj_ntk();org.javacc.utils.Token;0;0;0;0;0
org.javacc.jjtree.ASTOptionBinding.translateImage(org.javacc.jjtree.Token);org.javacc.jjtree.JJTreeNode;1;1;1;0.8333333333333334;0.9230769230769231;8;23;138
org.javacc.parser.JavaCCParser.regular_expr_production();org.javacc.parser.TokenProduction;0;0;0;0;0
org.javacc.parser.OutputFile.getPrintWriter();org.javacc.Version;0;6;3;0.7;1.0;19;150;2
org.javacc.parser.LexGenCPP.start();org.javacc.parser.Nfa;0;0;0;0;0
org.javacc.utils.ConditionParserTokenManager.jjMoveStringLiteralDfa3_0(long, long);org.javacc.utils.JavaCharStream;0;0;0;0;0
org.javacc.parser.LexGen.start();org.javacc.parser.RegularExpression;0;0;0;0;0
org.javacc.parser.ParseGenCPP.start();org.javacc.parser.ParseEngine;1;0;4;1.0;0.9803921568627451;401;404;1106
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTLHS);org.javacc.jjtree.NodeScope;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.ReInit(java.io.Reader);org.javacc.jjtree.JJTreeParserTokenManager;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveStringLiteralDfa5_0(long, long, long, long, long, long);org.javacc.jjtree.JavaCharStream;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpTokenActions();org.javacc.parser.CodeGenerator;6;0;3;1.0;0.8285714285714285;51;756;212
org.javacc.jjtree.JJTreeParser.javacc_input();org.javacc.parser.Options;0;0;0;0;0
org.javacc.parser.JavaCCParser.RUNSIGNEDSHIFT();org.javacc.parser.Token;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.javacode_production();org.javacc.jjtree.JJTreeGlobals;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.getIndentation(int, org.javacc.jjtree.JJTreeNode);org.javacc.jjtree.JJTreeNode;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTLHS);org.javacc.jjtree.TokenUtils;0;0;0;0;0
org.javacc.utils.ConditionParserTokenManager.jjMoveStringLiteralDfa1_0(long);org.javacc.utils.JavaCharStream;0;0;0;0;0
