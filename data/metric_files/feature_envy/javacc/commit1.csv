Method;TargetClass;ATFD;ATSD;FDP;DIST_EC;DIST_TC;LOC_M;LOC_EC;LOC_TC
org.javacc.parser.LexGen.writeTemplate(java.lang.Object[], java.lang.String);org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.notTailOfExpansionUnit();org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.tryTokenSequence(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope, org.javacc.jjtree.Token, org.javacc.jjtree.Token);org.javacc.jjtree.ASTProduction;0;0;0;0;0;0;0;0
org.javacc.parser.ParseGenCPP.start();org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.parser.Semanticize.action(org.javacc.parser.Expansion);org.javacc.parser.LookaheadCalc;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTree.main(java.lang.String[]);org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0;0;0;0
org.javacc.parser.LexGen.start();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.LexGen.writeTemplate(java.lang.Object[], java.lang.String);org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase3Routine(boolean, org.javacc.parser.Phase3Data);org.javacc.parser.JavaCCGlobals;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.getNextToken();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeNode.print(org.javacc.jjtree.IO, org.javacc.jjtree.Token);org.javacc.jjtree.TokenUtils;0;0;0;0;0;0;0;0
org.javacc.parser.OutputFile.getPrintWriter();org.javacc.parser.JavaCCGlobals;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.expansion(org.javacc.jjtree.ASTProduction);org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase3Routine(boolean, org.javacc.parser.Phase3Data);org.javacc.parser.Choice;0;0;0;0;0;0;0;0
org.javacc.parser.RStringLiteral.GenerateDfa(int, org.javacc.parser.CodeGenerator);org.javacc.parser.RegularExpression;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTCompilationUnit);org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.javacc_options();org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0;0;0;0
org.javacc.parser.TryBlock.dump(int, java.util.Set);org.javacc.parser.Expansion;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.jjFillToken();org.javacc.parser.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTExpansionNodeScope);org.javacc.jjtree.SimpleNode;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.setupPhase3Builds(org.javacc.parser.Phase3Data);org.javacc.parser.NonTerminal;1;3;2;0.9230769230769231;0.9285714285714286;48;1154;28
org.javacc.parser.JavaCCParser.Arguments(java.util.List);org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.buildLookaheadChecker(java.lang.String[], org.javacc.parser.Lookahead[]);org.javacc.parser.Semanticize;0;0;0;0;0;0;0;0
org.javacc.utils.ConditionParser.jj_consume_token(int);org.javacc.utils.ConditionParserTokenManager;0;0;0;0;0;0;0;0
org.javacc.utils.ConditionParser.ReInit(java.io.Reader);org.javacc.utils.ConditionParserTokenManager;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.generateCPPMethodheader(org.javacc.parser.BNFProduction, org.javacc.parser.Token);org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.NfaState.DumpNonAsciiMoveMethod(org.javacc.parser.CodeGenerator);org.javacc.parser.LexGen;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTree.main(java.lang.String[]);org.javacc.jjtree.NodeFiles;0;3;6;0.875;1.0;89;151;217
org.javacc.parser.LexGen.DumpFillToken();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.ROneOrMore.GenerateNfa(boolean);org.javacc.parser.Nfa;0;0;0;0;0;0;0;0
org.javacc.utils.ConditionParserTokenManager.getNextToken();org.javacc.utils.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.jj_scan_token(int);org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.minimumSize(int, org.javacc.parser.Expansion);org.javacc.parser.Sequence;0;0;0;0;0;0;0;0
org.javacc.jjtree.NodeScope.getNodeDescriptorText();org.javacc.jjtree.ASTNodeDescriptor;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion(org.javacc.parser.Container);org.javacc.parser.Container;1;10;2;0.9828767123287672;0.96;44;8311;0
org.javacc.parser.ParseGenCPP.start();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.getToken(int);org.javacc.parser.JavaCCParserTokenManager;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.complex_regular_expression_unit(org.javacc.parser.Container);org.javacc.parser.RZeroOrOne;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpMoreActions();org.javacc.parser.LexGen;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.node_descriptor();org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.jjMoveStringLiteralDfa4_0(long, long, long, long, long, long);org.javacc.parser.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.genFirstSet(org.javacc.parser.Expansion);org.javacc.parser.NonTerminal;1;3;1;0.925;0.9333333333333333;54;1154;28
org.javacc.parser.RChoice.CompressCharLists();org.javacc.parser.RCharacterList;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase2Routine(org.javacc.parser.Lookahead);org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.setUp();org.javacc.parser.Main;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.insertCloseNodeCode(boolean, java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.ASTNodeDescriptor;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.ReInit(org.javacc.jjtree.JJTreeParserTokenManager);org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.phase1ExpansionGen(org.javacc.parser.Expansion);org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.OptionsTest.testNormalize();org.javacc.parser.JavaCCErrors;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase2Routine(org.javacc.parser.Lookahead);org.javacc.parser.Lookahead;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpStaticVarDeclarations();org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.ReInit(java.io.Reader);org.javacc.parser.JavaCCParserTokenManager;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.buildLookaheadChecker(java.lang.String[], org.javacc.parser.Lookahead[]);org.javacc.parser.Expansion;1;8;2;0.8222222222222222;0.96875;162;1154;34
org.javacc.parser.ExpansionTest.setUp();org.javacc.parser.Expansion;2;1;1;0.9333333333333333;0.875;8;72;34
org.javacc.jjtree.JJTreeParser.regular_expression();org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0;0;0;0
org.javacc.parser.RSequence.GenerateNfa(boolean);org.javacc.parser.RegularExpression;0;0;0;0;0;0;0;0
org.javacc.parser.NfaState.AddChar(char);org.javacc.parser.LexGen;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.genReturn(boolean);org.javacc.parser.Expansion;1;0;1;1.0;0.9285714285714286;13;1154;34
org.javacc.parser.test.NfaStateTest.testDumpCharAndRangeMovesInitialised();org.javacc.parser.NfaState;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.tryTokenSequence(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope, org.javacc.jjtree.Token, org.javacc.jjtree.Token);org.javacc.jjtree.TokenUtils;0;0;0;0;0;0;0;0
org.javacc.utils.ConditionParserTokenManager.jjMoveStringLiteralDfa1_2(long);org.javacc.utils.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.expansion(org.javacc.jjtree.ASTProduction);org.javacc.jjtree.ASTExpansionNodeScope;0;0;0;0;0;0;0;0
org.javacc.parser.NfaState.AddChar(char);org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase2Routine(org.javacc.parser.Lookahead);org.javacc.parser.CodeGenerator;1;3;2;0.925;0.9772727272727273;27;1154;265
org.javacc.parser.JavaCCParserTokenManager.jjMoveStringLiteralDfa1_0(long, long, long);org.javacc.parser.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.genFirstSet(org.javacc.parser.Expansion);org.javacc.parser.Choice;0;0;0;0;0;0;0;0
org.javacc.parser.ZeroOrOne.dump(int, java.util.Set);org.javacc.parser.Expansion;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFDeclaration);org.javacc.jjtree.ASTBNFDeclaration;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTGrammar);org.javacc.parser.JavaCCGlobals;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.minimumSize(int, org.javacc.parser.Expansion);org.javacc.parser.OneOrMore;0;0;0;0;0;0;0;0
org.javacc.utils.ConditionParser.jj_consume_token(int);org.javacc.utils.Token;1;5;1;0.8275862068965517;0.9230769230769231;13;329;24
org.javacc.parser.test.NfaStateTest.testDumpCharAndRangeMovesInitialised();org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.parser.RCharacterList.GenerateNfa(boolean);org.javacc.parser.SingleCharacter;0;0;0;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpStatesForKind();org.javacc.parser.NfaState;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeOptionsTest.testValidateReturnType();org.javacc.jjtree.JJTreeOptions;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion_choices(org.javacc.parser.Container);org.javacc.parser.Container;1;6;2;0.9895470383275261;0.9090909090909091;32;8311;0
org.javacc.parser.LexGenCPP.DumpStaticVarDeclarations();org.javacc.parser.LexGen;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.jj_consume_token(int);org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.RZeroOrOne.GenerateNfa(boolean);org.javacc.parser.NfaState;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.phase1ExpansionGen(org.javacc.parser.Expansion);org.javacc.parser.RegularExpression;0;0;0;0;0;0;0;0
org.javacc.parser.LexGen.PrintClassHead();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.genFirstSet(org.javacc.parser.Expansion);org.javacc.parser.OneOrMore;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFAction);org.javacc.jjtree.JJTreeNode;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.javacc_options();org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTJavacodeBody);org.javacc.jjtree.IO;1;4;3;1.0;0.9545454545454546;16;331;100
org.javacc.parser.JavaCCParser.jj_ntk();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTLHS);org.javacc.jjtree.JJTreeNode;2;0;2;1.0;0.8181818181818181;10;331;94
org.javacc.jjdoc.HTMLGenerator.print(java.lang.String);org.javacc.jjdoc.TextGenerator;0;0;0;0;0;0;0;0
org.javacc.parser.LexGen.start();org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.jjMoveStringLiteralDfa8_0(long, long, long, long);org.javacc.parser.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.genFirstSet(org.javacc.parser.Expansion);org.javacc.parser.ZeroOrMore;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.bnf_production();org.javacc.parser.Container;1;14;2;0.9761904761904762;0.9696969696969697;51;8311;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFAction);org.javacc.jjtree.NodeScope;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.setupPhase3Builds(org.javacc.parser.Phase3Data);org.javacc.parser.Sequence;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFNodeScope);org.javacc.jjtree.ASTNodeDescriptor;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpStaticVarDeclarations();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.node_descriptor();org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.regular_expr_production();org.javacc.parser.JavaCCErrors;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.jj_scan_token(int);org.javacc.jjtree.JJTreeParserTokenManager;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.jjMoveStringLiteralDfa5_0(long, long, long, long);org.javacc.parser.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.RStringLiteral.GenerateDfa(int, org.javacc.parser.CodeGenerator);org.javacc.parser.NfaState;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase3Routine(boolean, org.javacc.parser.Phase3Data);org.javacc.parser.TryBlock;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.generate3R(org.javacc.parser.Expansion, org.javacc.parser.Phase3Data);org.javacc.parser.Phase3Data;1;3;3;0.9318181818181819;0.9285714285714286;33;1154;4
org.javacc.jjtree.JJTreeOptionsTest.testValidate();org.javacc.parser.JavaCCErrors;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.setupPhase3Builds(org.javacc.parser.Phase3Data);org.javacc.parser.NormalProduction;0;0;0;0;0;0;0;0
org.javacc.parser.Lookahead.dump(int, java.util.Set);org.javacc.parser.Expansion;0;0;0;0;0;0;0;0
org.javacc.parser.RZeroOrOne.GenerateNfa(boolean);org.javacc.parser.RegularExpression;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.javaCodeCheck(org.javacc.parser.Expansion);org.javacc.parser.TryBlock;0;0;0;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpStateSets();org.javacc.parser.NfaState;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.tryTokenSequence(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope, org.javacc.jjtree.Token, org.javacc.jjtree.Token);org.javacc.jjtree.IO;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.ReturnStatement();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.expansion_unit(org.javacc.jjtree.ASTProduction);org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.dumpFormattedString(java.lang.String);org.javacc.parser.CodeGenerator;2;2;1;0.9459459459459459;0.9487179487179487;34;1154;265
org.javacc.parser.ExpansionTest.testRZeroOrMoreConstructor();org.javacc.parser.Expansion;2;1;2;0.9375;0.8823529411764706;7;72;34
org.javacc.parser.JavaCCParser.complex_regular_expression_unit(org.javacc.parser.Container);org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.RStringLiteral.GenerateDfa(int, org.javacc.parser.CodeGenerator);org.javacc.parser.KindInfo;2;1;2;0.95;0.9;40;908;12
org.javacc.jjtree.JJTreeParser.bnf_production();org.javacc.jjtree.ASTBNFNodeScope;0;0;0;0;0;0;0;0
org.javacc.parser.ParseGen.start(boolean);org.javacc.parser.JavaCCErrors;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.eatUptoCloseBrace();org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.genReturn(boolean);org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.OutputFile.checkOptions(java.io.File, java.lang.String[]);org.javacc.parser.JavaCCErrors;0;0;0;0;0;0;0;0
org.javacc.jjtree.ASTOptionBinding.initialize(java.lang.String, java.lang.String);org.javacc.jjtree.JJTreeGlobals;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.character_descriptor();org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.getNextToken();org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.javaCodeCheck(org.javacc.parser.Expansion);org.javacc.parser.Choice;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.phase1ExpansionGen(org.javacc.parser.Expansion);org.javacc.parser.Expansion;1;4;3;0.95;0.9761904761904762;245;1154;34
org.javacc.jjtree.JJTreeNode.print(org.javacc.jjtree.IO, org.javacc.jjtree.Token);org.javacc.jjtree.NodeScope;1;2;2;0.8666666666666667;0.9411764705882353;47;94;53
org.javacc.parser.JavaCCParser.bnf_production();org.javacc.parser.JavaCCParserInternals;0;14;2;0.9761904761904762;1.0;51;8311;263
org.javacc.parser.JavaCCParser.regular_expression(org.javacc.parser.Container);org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpFillToken();org.javacc.parser.JavaFiles;0;0;0;0;0;0;0;0
org.javacc.jjtree.ASTNodeDescriptor.translateImage(org.javacc.jjtree.Token);org.javacc.jjtree.JJTreeNode;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.tryTokenSequence(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope, org.javacc.jjtree.Token, org.javacc.jjtree.Token);org.javacc.jjtree.NodeScope;0;0;0;0;0;0;0;0
org.javacc.utils.ConditionParserTokenManager.getNextToken();org.javacc.utils.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.jj_consume_token(int);org.javacc.parser.JavaCCParserTokenManager;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion_unit(org.javacc.parser.Container);org.javacc.parser.JavaCCErrors;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.javacode_production();org.javacc.jjtree.ASTProduction;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.regexpr_spec(org.javacc.parser.TokenProduction);org.javacc.parser.RegularExpression;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.CompilationUnit();org.javacc.jjtree.JJTreeGlobals;0;0;0;0;0;0;0;0
org.javacc.parser.OptionsTest.testSetBooleanOption();org.javacc.parser.JavaCCErrors;0;0;0;0;0;0;0;0
org.javacc.jjtree.ASTGrammar.generate(org.javacc.jjtree.IO);org.javacc.jjtree.CPPCodeGenerator;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.insertOpenNodeCode(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.RZeroOrMore.GenerateNfa(boolean);org.javacc.parser.NfaState;0;0;0;0;0;0;0;0
org.javacc.parser.ZeroOrMore.dump(int, java.util.Set);org.javacc.parser.Expansion;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase3Routine(boolean, org.javacc.parser.Phase3Data);org.javacc.parser.CodeGenerator;5;7;4;0.8928571428571429;0.9152542372881356;151;1154;265
org.javacc.parser.JavaCCParser.character_descriptor(org.javacc.parser.Container);org.javacc.parser.SingleCharacter;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpFillToken();org.javacc.parser.LexGen;0;0;0;0;0;0;0;0
org.javacc.jjdoc.HTMLGenerator.productionEnd(org.javacc.parser.NormalProduction);org.javacc.jjdoc.JJDocOptions;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.jj_consume_token(int);org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.TokenLexicalActions(org.javacc.jjtree.Token);org.javacc.jjtree.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.RCharacterList.GenerateNfa(boolean);org.javacc.parser.JavaCCErrors;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.javacode_production();org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.jjMoveNfa_0(int, int);org.javacc.parser.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.javacode_production();org.javacc.parser.JavaCCParserInternals;0;12;2;0.9794520547945206;1.0;44;8311;263
org.javacc.jjdoc.TextGenerator.create_output_stream();org.javacc.jjdoc.JJDocOptions;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.ClassOrInterfaceDeclaration(int, java.util.List);org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.javacode_production();org.javacc.parser.JavaCodeProduction;1;12;2;0.9794520547945206;0.962962962962963;44;8311;3
org.javacc.parser.NormalProduction.dump(int, java.util.Set);org.javacc.parser.Expansion;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.start();org.javacc.parser.LexGen;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.insertOpenNodeCode(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.CPPNodeFiles;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.node_descriptor_expression();org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.tryExpansionUnit(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.JJTreeNode, org.javacc.jjtree.NodeScope);org.javacc.jjtree.IO;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeOptionsTest.testValidateReturnType();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpStatesForKind();org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.jjtree.DefaultJJTreeVisitor.defaultVisit(java.lang.Object, org.javacc.jjtree.SimpleNode);org.javacc.jjtree.SimpleNode;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveStringLiteralDfa8_0(long, long, long, long, long, long);org.javacc.jjtree.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFDeclaration);org.javacc.jjtree.TokenUtils;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.genReturn(boolean);org.javacc.parser.JavaCCGlobals;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.character_descriptor(org.javacc.parser.Container);org.javacc.parser.CharacterRange;4;7;3;0.9879725085910653;0.8;34;8311;31
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTJavacodeBody);org.javacc.jjtree.JJTreeNode;0;0;0;0;0;0;0;0
org.javacc.jjtree.ASTOptionBinding.translateImage(org.javacc.jjtree.Token);org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.parser.OptionsTest.testSetStringOption();org.javacc.parser.JavaCCErrors;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTExpansionNodeScope);org.javacc.jjtree.NodeScope;0;0;0;0;0;0;0;0
org.javacc.parser.OptionsTest.testOptionsString();org.javacc.parser.JavaCCErrors;0;0;0;0;0;0;0;0
org.javacc.parser.RChoice.CompressCharLists();org.javacc.parser.RJustName;0;0;0;0;0;0;0;0
org.javacc.parser.CodeGenerator.saveOutput(java.lang.String);org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.NfaState.AddRange(char, char);org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveStringLiteralDfa7_0(long, long, long, long, long, long);org.javacc.jjtree.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTCompilationUnit);org.javacc.jjtree.NodeFiles;0;1;4;1.0;1.0;38;331;217
org.javacc.parser.LexGenCPP.DumpTokenActions();org.javacc.parser.RStringLiteral;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.start();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.RStringLiteral.GenerateDfa(int, org.javacc.parser.CodeGenerator);org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.ExpansionTest.testZeroOrOneConstructor();org.javacc.parser.Expansion;3;1;1;0.9375;0.8125;7;72;34
org.javacc.parser.JavaCCParserTokenManager.jjMoveStringLiteralDfa11_0(long, long, long, long);org.javacc.parser.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion_unit(org.javacc.parser.Container);org.javacc.parser.Container;1;21;4;0.9655737704918033;0.9838709677419355;212;8311;0
org.javacc.utils.ConditionParser.getNextToken();org.javacc.utils.ConditionParserTokenManager;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase3Routine(boolean, org.javacc.parser.Phase3Data);org.javacc.parser.ZeroOrOne;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.javacode_production();org.javacc.jjtree.ASTJavacode;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.ClassOrInterfaceDeclaration();org.javacc.jjtree.JJTreeGlobals;0;0;0;0;0;0;0;0
org.javacc.parser.ExpansionTest.testZeroOrOneConstructor();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.token_manager_decls();org.javacc.parser.JavaCCParserInternals;1;9;1;0.9842931937172775;1.0;20;8311;263
org.javacc.parser.JavaCCParser.regular_expression(org.javacc.parser.Container);org.javacc.parser.Container;1;11;2;0.9811965811965812;0.962962962962963;77;8311;0
org.javacc.parser.Semanticize.action(org.javacc.parser.Expansion);org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.ExpansionTest.testROneOrMoreConstructor();org.javacc.parser.Expansion;2;1;2;0.9375;0.8823529411764706;7;72;34
org.javacc.jjdoc.test.JJDocMainTest.testMainProgramHTML();org.javacc.jjdoc.JJDocMain;0;0;0;0;0;0;0;0
org.javacc.jjdoc.HTMLGenerator.nonterminalsEnd();org.javacc.jjdoc.JJDocOptions;0;0;0;0;0;0;0;0
org.javacc.parser.CodeGenerator.genAnnotation(java.lang.String);org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.utils.JavaFileGenerator.evaluate(java.lang.String);org.javacc.utils.ConditionParser;1;1;1;0.9333333333333333;0.9655172413793104;9;107;329
org.javacc.parser.OptionsTest.testSetBooleanOption();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.jjdoc.TextGenerator.create_output_stream();org.javacc.jjdoc.JJDocGlobals;0;2;1;0.9333333333333333;1.0;40;111;47
org.javacc.parser.JavaCCParser.expansion_unit(org.javacc.parser.Container);org.javacc.parser.Action;0;0;0;0;0;0;0;0
org.javacc.utils.ConditionParserTokenManager.jjStartNfaWithStates_0(int, int, int);org.javacc.utils.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.setupPhase3Builds(org.javacc.parser.Phase3Data);org.javacc.parser.Choice;0;0;0;0;0;0;0;0
org.javacc.parser.RChoice.GenerateNfa(boolean);org.javacc.parser.Nfa;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.getNextToken();org.javacc.jjtree.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeOptionsTest.testOutputDirectory();org.javacc.jjtree.JJTreeOptions;0;0;0;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpNonAsciiMoveMethodsInitialised();org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.parser.RStringLiteral.GenerateDfa(int, org.javacc.parser.CodeGenerator);org.javacc.parser.JavaCCErrors;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFAction);org.javacc.jjtree.SimpleNode;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFNodeScope);org.javacc.jjtree.IO;0;0;0;0;0;0;0;0
org.javacc.parser.OutputFile.checkVersion(java.io.File, java.lang.String);org.javacc.parser.JavaCCGlobals;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.character_list(org.javacc.parser.Container);org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.ASTNodeDescriptor.toString();org.javacc.jjtree.SimpleNode;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.insertCatchBlocks(java.lang.String, java.util.Enumeration, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.IO;1;0;2;1.0;0.9473684210526316;21;331;100
org.javacc.parser.RChoice.CheckUnmatchability();org.javacc.parser.RegularExpression;0;0;0;0;0;0;0;0
org.javacc.parser.RCharacterList.ToCaseNeutral();org.javacc.parser.CharacterRange;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.insertOpenNodeCode(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.ASTNodeDescriptor;0;0;0;0;0;0;0;0
org.javacc.utils.ParseException.getMessage();org.javacc.utils.Token;4;5;1;0.6428571428571428;0.75;43;102;24
org.javacc.jjtree.JJTreeParserTokenManager.jjFillToken();org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.parser.CodeGenerator.getStringToPrint(org.javacc.parser.Token);org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.CompilationUnit();org.javacc.parser.JavaCCParserInternals;0;9;1;0.9846153846153847;1.0;49;8311;263
org.javacc.parser.LexGenCPP.DumpGetNextToken();org.javacc.parser.NfaState;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase3Routine(boolean, org.javacc.parser.Phase3Data);org.javacc.parser.ZeroOrMore;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.tryExpansionUnit(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.JJTreeNode, org.javacc.jjtree.NodeScope);org.javacc.jjtree.NodeScope;2;4;2;1.0;0.8823529411764706;19;331;53
org.javacc.parser.ParseEngine.genFirstSet(org.javacc.parser.Expansion);org.javacc.parser.RegularExpression;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.eatUptoCloseBrace(java.util.List);org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.build(org.javacc.parser.CodeGenerator);org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTJavacodeBody);org.javacc.jjtree.NodeScope;2;4;3;1.0;0.8823529411764706;16;331;53
org.javacc.parser.ROneOrMore.GenerateNfa(boolean);org.javacc.parser.RegularExpression;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTCompilationUnit);org.javacc.jjtree.IO;1;1;4;1.0;0.9545454545454546;38;331;100
org.javacc.jjdoc.HTMLGenerator.handleTokenProduction(org.javacc.parser.TokenProduction);org.javacc.jjdoc.JJDoc;0;0;0;0;0;0;0;0
org.javacc.parser.Sequence.dump(int, java.util.Set);org.javacc.parser.Expansion;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.javacode_production();org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0;0;0;0
org.javacc.parser.ExpansionTest.testRStringLiteralConstructor();org.javacc.parser.Expansion;2;1;2;0.9375;0.8823529411764706;6;72;34
org.javacc.parser.ParseEngine.genFirstSet(org.javacc.parser.Expansion);org.javacc.parser.Sequence;0;0;0;0;0;0;0;0
org.javacc.parser.CodeGenerator.saveOutput(java.lang.String, java.lang.StringBuffer);org.javacc.parser.JavaCCErrors;0;0;0;0;0;0;0;0
org.javacc.jjtree.ASTBNFAction.getScopingParent(org.javacc.jjtree.NodeScope);org.javacc.jjtree.ASTExpansionNodeScope;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.ReInit(java.io.Reader);org.javacc.parser.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.RChoice.CheckUnmatchability();org.javacc.parser.LexGen;0;0;0;0;0;0;0;0
org.javacc.utils.ConditionParserTokenManager.jjMoveNfa_0(int, int);org.javacc.utils.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.Block(java.util.List);org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFNodeScope);org.javacc.jjtree.IO;1;4;2;0.962962962962963;0.95;11;331;100
org.javacc.jjtree.JavaCodeGenerator.insertOpenNodeCode(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.NodeFiles;1;0;4;1.0;1.0;33;331;217
org.javacc.jjtree.JJTreeOptionsTest.testNodeFactory();org.javacc.jjtree.JJTreeOptions;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTree.main(java.lang.String[]);org.javacc.jjtree.ASTNodeDescriptor;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.bnf_production();org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTree.main(java.lang.String[]);org.javacc.parser.JavaCCGlobals;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTree.main(java.lang.String[]);org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.ExpansionTest.testOneOrMoreConstructor();org.javacc.parser.Expansion;3;1;1;0.9375;0.8125;8;72;34
org.javacc.parser.test.NfaStateTest.testDumpCharAndRangeMoves();org.javacc.parser.NfaState;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTCompilationUnit);org.javacc.jjtree.JJTreeNode;3;1;4;1.0;0.875;38;331;94
org.javacc.parser.JavaCCParserTokenManager.jjMoveStringLiteralDfa7_0(long, long, long, long);org.javacc.parser.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.RSequence.GenerateNfa(boolean);org.javacc.parser.NfaState;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.jjMoveStringLiteralDfa12_0(long, long, long, long);org.javacc.parser.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.ReInit(java.io.InputStream, java.lang.String);org.javacc.parser.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.javacode_production();org.javacc.parser.NormalProduction;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.local_lookahead();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.LexGen.DumpMoreActions();org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.parser.RStringLiteral.GenerateNfa(boolean);org.javacc.parser.NfaState;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeOptionsTest.testOutputDirectory();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.ReturnStatement();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.insertCatchBlocks(java.lang.String, java.util.Enumeration, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.IO;0;0;0;0;0;0;0;0
org.javacc.parser.ParseException.getMessage();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.minimumSize(int, org.javacc.parser.Expansion);org.javacc.parser.Choice;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.AccessModifier(org.javacc.parser.NormalProduction);org.javacc.parser.NormalProduction;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.minimumSize(int, org.javacc.parser.Expansion);org.javacc.parser.NonTerminal;1;2;2;0.975609756097561;0.9285714285714286;70;1154;28
org.javacc.parser.NfaState.DumpAsciiMove(boolean[], int, org.javacc.parser.CodeGenerator);org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.setupState();org.javacc.parser.JavaCCGlobals;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.bnf_production();org.javacc.jjtree.ASTBNFDeclaration;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTJavacodeBody);org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.start();org.javacc.parser.RegularExpression;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.ClassOrInterfaceBody(boolean, java.util.List);org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.javacc_input();org.javacc.jjtree.JJTreeOptions;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.ReInit(java.io.InputStream, java.lang.String);org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0;0;0;0
org.javacc.parser.RCharacterList.SortDescriptors();org.javacc.parser.CharacterRange;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion(org.javacc.parser.Container);org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.JJTreeNode);org.javacc.jjtree.SimpleNode;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion(org.javacc.parser.Container);org.javacc.parser.Lookahead;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.SwitchTo(int);org.javacc.jjtree.TokenMgrError;0;0;0;0;0;0;0;0
org.javacc.jjdoc.BNFGenerator.handleTokenProduction(org.javacc.parser.TokenProduction);org.javacc.jjdoc.JJDoc;0;0;0;0;0;0;0;0
org.javacc.jjdoc.BNFGenerator.create_output_stream();org.javacc.jjdoc.JJDocGlobals;0;2;1;0.9428571428571428;1.0;34;115;47
org.javacc.parser.JavaCCParserTokenManager.SwitchTo(int);org.javacc.parser.TokenMgrError;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpSkipActions();org.javacc.parser.RStringLiteral;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.StringLiteral();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.RChoice.CheckUnmatchability();org.javacc.parser.JavaCCErrors;0;0;0;0;0;0;0;0
org.javacc.parser.OptionsTest.testSetNonexistentOption();org.javacc.parser.JavaCCErrors;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.javaCodeCheck(org.javacc.parser.Expansion);org.javacc.parser.Lookahead;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.jjtreeCloseNodeScope(org.javacc.jjtree.Node);org.javacc.jjtree.JJTreeNode;0;0;0;0;0;0;0;0
org.javacc.jjdoc.test.JJDocMainTest.testMainProgramText();org.javacc.JavaCCTestCase;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.regexpr_spec(org.javacc.parser.TokenProduction);org.javacc.parser.Action;0;0;0;0;0;0;0;0
org.javacc.parser.NfaState.AddChar(char);org.javacc.parser.Main;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveStringLiteralDfa2_0(long, long, long, long, long, long);org.javacc.jjtree.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.jj_scan_token(int);org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.jjFillToken();org.javacc.jjtree.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.ExpansionTest.testSequenceConstructor();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.regexpr_spec();org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.javaCodeCheck(org.javacc.parser.Expansion);org.javacc.parser.Sequence;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.complex_regular_expression_unit();org.javacc.jjtree.JJTreeNode;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.tryTokenSequence(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope, org.javacc.jjtree.Token, org.javacc.jjtree.Token);org.javacc.jjtree.TokenUtils;0;0;0;0;0;0;0;0
org.javacc.parser.Semanticize.action(org.javacc.parser.Expansion);org.javacc.parser.OneOrMore;0;0;0;0;0;0;0;0
org.javacc.parser.ParseGenCPP.start();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.RChoice.GenerateNfa(boolean);org.javacc.parser.NfaState;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.bnf_production();org.javacc.parser.NormalProduction;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.ReInit(java.io.Reader);org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.start();org.javacc.parser.RStringLiteral;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveStringLiteralDfa1_3(long);org.javacc.jjtree.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveStringLiteralDfa12_0(long, long, long, long);org.javacc.jjtree.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.javaCodeCheck(org.javacc.parser.Expansion);org.javacc.parser.ZeroOrOne;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.jj_ntk();org.javacc.parser.JavaCCParserTokenManager;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.PackageDeclaration();org.javacc.jjtree.JJTreeGlobals;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.phase1NewLine();org.javacc.parser.CodeGenerator;2;1;1;0.9714285714285714;0.9444444444444444;6;1154;265
org.javacc.parser.LexGen.DumpGetNextToken();org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.parser.RChoice.CheckUnmatchability();org.javacc.parser.Main;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.getNextToken();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.regular_expr_production();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.RSIGNEDSHIFT();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.utils.ConditionParserTokenManager.jjFillToken();org.javacc.utils.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeNode.print(org.javacc.jjtree.IO, org.javacc.jjtree.Token);org.javacc.jjtree.IO;1;2;2;0.8666666666666667;0.9523809523809523;47;94;100
org.javacc.jjtree.JJTreeParserDefaultVisitor.defaultVisit(java.lang.Object, org.javacc.jjtree.SimpleNode);org.javacc.jjtree.SimpleNode;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFNodeScope);org.javacc.jjtree.ASTBNFNodeScope;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.ThrowStatement();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.jjdoc.test.JJDocMainTest.testMainProgramText();org.javacc.jjdoc.JJDocMain;0;0;0;0;0;0;0;0
org.javacc.parser.ExpansionTest.testROneOrMoreConstructor();org.javacc.parser.ROneOrMore;1;1;2;0.9375;0.8571428571428572;7;72;17
org.javacc.jjtree.JJTreeParser.local_lookahead(org.javacc.jjtree.ASTProduction);org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.build(org.javacc.parser.CodeGenerator);org.javacc.parser.JavaCCErrors;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTJavacodeBody);org.javacc.jjtree.JJTreeNode;2;4;3;1.0;0.875;16;331;94
org.javacc.parser.LexGen.start();org.javacc.parser.Action;0;0;0;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpStatesForStateInitialised();org.javacc.parser.NfaState;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTCompilationUnit);org.javacc.jjtree.JJTreeGlobals;0;1;4;1.0;1.0;38;331;34
org.javacc.parser.OutputFile.checkOptions(java.io.File, java.lang.String[]);org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.ExpansionTest.testOneOrMoreConstructor();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.character_list(org.javacc.parser.Container);org.javacc.parser.Expansion;2;7;2;0.9879725085910653;0.935483870967742;41;8311;34
org.javacc.parser.JavaCCParser.complex_regular_expression_unit(org.javacc.parser.Container);org.javacc.parser.RRepetitionRange;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.javaCodeCheck(org.javacc.parser.Expansion);org.javacc.parser.ZeroOrMore;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion(org.javacc.parser.Container);org.javacc.parser.Expansion;4;10;2;0.9828767123287672;0.8823529411764706;44;8311;34
org.javacc.parser.LexGenCPP.DumpGetNextToken();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.start();org.javacc.parser.RegExprSpec;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTree.initializeOptions();org.javacc.jjtree.JJTreeOptions;0;0;2;1.0;1.0;4;151;103
org.javacc.utils.ConditionParser.jj_ntk();org.javacc.utils.ConditionParserTokenManager;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpMoreActions();org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.parser.LexGen.DumpGetNextToken();org.javacc.parser.NfaState;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFAction);org.javacc.jjtree.SimpleNode;0;0;0;0;0;0;0;0
org.javacc.jjdoc.XTextGenerator.print(java.lang.String);org.javacc.jjdoc.TextGenerator;1;0;1;1.0;0.9615384615384616;3;73;111
org.javacc.parser.ParseEngine.buildPhase3Routine(boolean, org.javacc.parser.Phase3Data);org.javacc.parser.Lookahead;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.insertCloseNodeAction(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.IO;0;0;0;0;0;0;0;0
org.javacc.parser.LexGen.start();org.javacc.parser.RegExprSpec;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.RUNSIGNEDSHIFT();org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.jjdoc.HTMLGenerator.productionStart(org.javacc.parser.NormalProduction);org.javacc.parser.NormalProduction;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTLHS);org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTree.main(java.lang.String[]);org.javacc.jjtree.JJTreeState;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion_choices(org.javacc.parser.Container);org.javacc.parser.Expansion;1;6;2;0.9895470383275261;0.9565217391304348;32;8311;34
org.javacc.jjtree.JJTreeParser.ReInit(java.io.InputStream, java.lang.String);org.javacc.jjtree.JJTreeParserTokenManager;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.insertCatchBlocks(java.lang.String, java.util.Enumeration, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.NodeScope;0;0;0;0;0;0;0;0
org.javacc.parser.NfaState.MergeMoves(org.javacc.parser.NfaState);org.javacc.parser.JavaCCErrors;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTree.main(java.lang.String[]);org.javacc.jjtree.IO;8;3;6;0.875;0.7142857142857143;89;151;100
org.javacc.parser.LexGenCPP.PrintClassHead();org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.parser.ParseGen.start(boolean);org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.generate3R(org.javacc.parser.Expansion, org.javacc.parser.Phase3Data);org.javacc.parser.Expansion;1;3;3;0.9318181818181819;0.9615384615384616;33;1154;34
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFAction);org.javacc.jjtree.NodeScope;1;4;3;0.9655172413793104;0.9444444444444444;33;331;53
org.javacc.jjtree.ASTBNFAction.getScopingParent(org.javacc.jjtree.NodeScope);org.javacc.jjtree.ASTBNFNodeScope;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.getToken(int);org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.jjdoc.HTMLGenerator.nonTerminalStart(org.javacc.parser.NonTerminal);org.javacc.parser.NonTerminal;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTGrammar);org.javacc.parser.JavaCCGlobals;0;0;0;0;0;0;0;0
org.javacc.parser.RChoice.CompressCharLists();org.javacc.parser.RStringLiteral;0;0;0;0;0;0;0;0
org.javacc.jjtree.ASTNodeDescriptorExpression.translateImage(org.javacc.jjtree.Token);org.javacc.jjtree.JJTreeNode;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.jjMoveStringLiteralDfa13_0(long, long);org.javacc.parser.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.javaCodeCheck(org.javacc.parser.Expansion);org.javacc.parser.Semanticize;0;0;0;0;0;0;0;0
org.javacc.parser.OptionsTest.testIntBooleanOption();org.javacc.parser.JavaCCErrors;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion_unit(org.javacc.parser.Container);org.javacc.parser.RegularExpression;0;0;0;0;0;0;0;0
org.javacc.parser.LexGen.DumpTokenActions();org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.parser.LexGen.DumpTokenActions();org.javacc.parser.Action;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.regexpr_spec(org.javacc.parser.TokenProduction);org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.RCharacterList.ToCaseNeutral();org.javacc.parser.SingleCharacter;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.start();org.javacc.parser.TokenProduction;0;0;0;0;0;0;0;0
org.javacc.utils.ConditionParserTokenManager.jjMoveStringLiteralDfa2_0(long, long);org.javacc.utils.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.jj_3R_84();org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpSkipActions();org.javacc.parser.LexGen;0;0;0;0;0;0;0;0
org.javacc.jjdoc.XTextGenerator.documentStart();org.javacc.jjdoc.JJDocGlobals;0;1;2;0.96;1.0;6;73;47
org.javacc.parser.JavaCCParser.CompilationUnit();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.expansion_choices(org.javacc.jjtree.ASTProduction);org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.insertOpenNodeCode(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.IO;2;0;4;1.0;0.9130434782608696;33;331;100
org.javacc.utils.ConditionParserTokenManager.jjFillToken();org.javacc.utils.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.javaCodeCheck(org.javacc.parser.Expansion);org.javacc.parser.NonTerminal;1;1;1;0.975;0.9230769230769231;58;1154;28
org.javacc.parser.NonTerminal.dump(int, java.util.Set);org.javacc.parser.Expansion;1;1;1;0.8888888888888888;0.9375;4;28;34
org.javacc.parser.OptionsTest.testNormalize();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.jjtreeOpenNodeScope(org.javacc.jjtree.Node);org.javacc.jjtree.JJTreeNode;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.regular_expression(org.javacc.parser.Container);org.javacc.parser.Expansion;2;11;2;0.9811965811965812;0.9473684210526316;77;8311;34
org.javacc.jjtree.JJTreeParserTokenManager.jjStartNfaWithStates_0(int, int, int);org.javacc.jjtree.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.insertCloseNodeCode(boolean, java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.JJTreeOptions;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.phase1ExpansionGen(org.javacc.parser.Expansion);org.javacc.parser.OneOrMore;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpSkipActions();org.javacc.parser.Action;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeOptionsTest.testValidate();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.OptionsTest.testIntBooleanOption();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.minimumSize(int, org.javacc.parser.Expansion);org.javacc.parser.TryBlock;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.insertCloseNodeCode(boolean, java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.NodeScope;4;0;3;1.0;0.6666666666666667;16;331;53
org.javacc.parser.LexGenCPP.start();org.javacc.parser.NfaState;0;0;0;0;0;0;0;0
org.javacc.parser.ExpansionTest.testRJustNameConstructor();org.javacc.parser.RegularExpression;0;0;0;0;0;0;0;0
org.javacc.parser.ExpansionTest.testChoiceConstructor();org.javacc.parser.Expansion;2;1;1;0.9411764705882353;0.8888888888888888;9;72;34
org.javacc.parser.JavaCCParser.Name(java.util.List);org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.token_manager_decls();org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0;0;0;0
org.javacc.parser.NfaState.DumpNonAsciiMoveForCompositeState(org.javacc.parser.CodeGenerator);org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.getIndentation(int, org.javacc.jjtree.JJTreeNode);org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.RSIGNEDSHIFT();org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.MoreLexicalActions();org.javacc.parser.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveNfa_0(int, int);org.javacc.jjtree.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.identifier();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.utils.ConditionParserTokenManager.jjMoveStringLiteralDfa4_0(long, long);org.javacc.utils.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion(org.javacc.parser.Container);org.javacc.parser.JavaCCErrors;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFDeclaration);org.javacc.jjtree.NodeScope;0;0;0;0;0;0;0;0
org.javacc.parser.ExpansionTest.testRJustNameConstructor();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.getToken(int);org.javacc.jjtree.JJTreeParserTokenManager;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase1Routine(org.javacc.parser.BNFProduction);org.javacc.parser.NormalProduction;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.bnf_production();org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.javacc_input();org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0;0;0;0
org.javacc.parser.NfaState.DumpAsciiMoveForCompositeState(boolean, int, org.javacc.parser.CodeGenerator);org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.parser.LexGen.start();org.javacc.parser.TokenProduction;0;0;0;0;0;0;0;0
org.javacc.jjtree.ASTBNF.toString();org.javacc.jjtree.SimpleNode;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.jjMoveStringLiteralDfa6_0(long, long, long, long);org.javacc.parser.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.OptionsTest.testSetStringOption();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFDeclaration);org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.setupState();org.javacc.parser.LexGen;0;0;0;0;0;0;0;0
org.javacc.parser.ParseGen.start(boolean);org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.jjdoc.XTextGenerator.documentStart();org.javacc.jjdoc.TextGenerator;2;1;2;0.96;0.9230769230769231;6;73;111
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTExpansionNodeScope);org.javacc.jjtree.ASTExpansionNodeScope;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase3Routine(boolean, org.javacc.parser.Phase3Data);org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.RCharacterList.GenerateNfa(boolean);org.javacc.parser.NfaState;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.tryTokenSequence(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope, org.javacc.jjtree.Token, org.javacc.jjtree.Token);org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.parser.LexGen.start();org.javacc.parser.RChoice;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.regular_expr_production();org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0;0;0;0
org.javacc.parser.ExpansionTest.testChoiceConstructor();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.RStringLiteral.GenerateDfa(int, org.javacc.parser.CodeGenerator);org.javacc.parser.Main;0;1;2;0.95;1.0;40;908;205
org.javacc.parser.ParseEngine.generateCPPMethodheader(org.javacc.parser.BNFProduction, org.javacc.parser.Token);org.javacc.parser.NormalProduction;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFNodeScope);org.javacc.jjtree.ASTBNFNodeScope;0;0;0;0;0;0;0;0
org.javacc.parser.ExpansionTest.testRStringLiteralConstructor();org.javacc.parser.RStringLiteral;1;1;2;0.9375;0.9;6;72;908
org.javacc.parser.RStringLiteral.GenerateNfa(boolean);org.javacc.parser.RCharacterList;0;0;0;0;0;0;0;0
org.javacc.parser.RSequence.GenerateNfa(boolean);org.javacc.parser.Nfa;0;0;0;0;0;0;0;0
org.javacc.parser.RStringLiteral.GenerateDfa(int, org.javacc.parser.CodeGenerator);org.javacc.parser.LexGen;0;0;0;0;0;0;0;0
org.javacc.parser.OutputFile.checkVersion(java.io.File, java.lang.String);org.javacc.parser.JavaCCErrors;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.option_binding();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.generate3R(org.javacc.parser.Expansion, org.javacc.parser.Phase3Data);org.javacc.parser.Sequence;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveStringLiteralDfa11_0(long, long, long, long);org.javacc.jjtree.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase1Routine(org.javacc.parser.BNFProduction);org.javacc.parser.JavaCCGlobals;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.javacc_input();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpMoveNfa();org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.parser.CodeGenerator.getStringForTokenOnly(org.javacc.parser.Token);org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.RZeroOrOne.GenerateNfa(boolean);org.javacc.parser.Nfa;0;0;0;0;0;0;0;0
org.javacc.parser.NfaState.DumpNonAsciiMoveMethod(org.javacc.parser.CodeGenerator);org.javacc.parser.Main;0;0;0;0;0;0;0;0
org.javacc.parser.RChoice.GenerateNfa(boolean);org.javacc.parser.RegularExpression;0;0;0;0;0;0;0;0
org.javacc.utils.ConditionParserTokenManager.SwitchTo(int);org.javacc.utils.TokenMgrError;0;0;0;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpNonAsciiMoveMethods();org.javacc.parser.NfaState;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.minimumSize(int, org.javacc.parser.Expansion);org.javacc.parser.NormalProduction;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.complex_regular_expression();org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTJavacodeBody);org.javacc.jjtree.ASTJavacodeBody;0;0;0;0;0;0;0;0
org.javacc.parser.ROneOrMore.GenerateNfa(boolean);org.javacc.parser.NfaState;0;0;0;0;0;0;0;0
org.javacc.parser.ExpansionTest.testRStringLiteralConstructor();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.LexGen.DumpGetNextToken();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.utils.ConditionParser.getToken(int);org.javacc.utils.ConditionParserTokenManager;0;0;0;0;0;0;0;0
org.javacc.parser.NfaState.AddRange(char, char);org.javacc.parser.JavaCCErrors;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.JavaIdentifier();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.character_descriptor(org.javacc.parser.Container);org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveStringLiteralDfa6_0(long, long, long, long, long, long);org.javacc.jjtree.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.jj_scan_token(int);org.javacc.parser.JavaCCParserTokenManager;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveStringLiteralDfa3_0(long, long, long, long, long, long);org.javacc.jjtree.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpMoreActions();org.javacc.parser.Action;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.PrintClassHead();org.javacc.parser.LexGen;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase3Routine(boolean, org.javacc.parser.Phase3Data);org.javacc.parser.NonTerminal;1;7;4;0.8928571428571429;0.9705882352941176;151;1154;28
org.javacc.jjtree.JJTreeOptionsTest.testValidate();org.javacc.jjtree.JJTreeOptions;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFAction);org.javacc.jjtree.IO;1;4;3;0.9655172413793104;0.9545454545454546;33;331;100
org.javacc.parser.JavaCCParser.javacc_input();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.javacc_input();org.javacc.parser.JavaCCParserInternals;1;14;1;0.9764705882352941;1.0;58;8311;263
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFNodeScope);org.javacc.jjtree.NodeScope;2;4;2;0.962962962962963;0.8666666666666667;11;331;53
org.javacc.jjtree.JJTreeParser.javacode_production();org.javacc.jjtree.ASTJavacodeBody;0;0;0;0;0;0;0;0
org.javacc.parser.LexGen.DumpTokenActions();org.javacc.parser.RStringLiteral;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion_unit(org.javacc.parser.Container);org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.regexpr_spec(org.javacc.parser.TokenProduction);org.javacc.parser.JavaCCErrors;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.JavaIdentifier();org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.setupState();org.javacc.parser.JavaCCParser;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.dumpLookaheads(java.lang.String[], org.javacc.parser.Lookahead[]);org.javacc.parser.Lookahead;0;0;0;0;0;0;0;0
org.javacc.jjdoc.HTMLGenerator.nonterminalsStart();org.javacc.jjdoc.JJDocOptions;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFDeclaration);org.javacc.jjtree.IO;1;3;3;1.0;0.95;19;331;100
org.javacc.parser.Semanticize.action(org.javacc.parser.Expansion);org.javacc.parser.ZeroOrOne;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.start();org.javacc.parser.Action;0;0;0;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.setupState();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveStringLiteralDfa1_0(long, long, long);org.javacc.jjtree.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.insertOpenNodeCode(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.NodeScope;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.MoreLexicalActions();org.javacc.jjtree.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.jjMoveStringLiteralDfa1_4(long);org.javacc.parser.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.getNextToken();org.javacc.parser.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.LexGen.DumpSkipActions();org.javacc.parser.Action;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.generate3R(org.javacc.parser.Expansion, org.javacc.parser.Phase3Data);org.javacc.parser.NormalProduction;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTGrammar);org.javacc.jjtree.SimpleNode;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.option_binding();org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0;0;0;0
org.javacc.parser.NfaState.AddChar(char);org.javacc.parser.JavaCCErrors;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.bnf_production();org.javacc.jjtree.ASTBNF;0;0;0;0;0;0;0;0
org.javacc.parser.OptionsTest.testOptionsString();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.JJTreeNode);org.javacc.jjtree.SimpleNode;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.build(org.javacc.parser.CodeGenerator);org.javacc.parser.CodeGenerator;10;8;2;0.8852459016393442;0.8333333333333334;91;1154;265
org.javacc.utils.ConditionParser.Name();org.javacc.utils.Token;1;3;1;0.9117647058823529;0.9375;21;329;24
org.javacc.parser.JavaCCParser.option_binding();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.jjdoc.XTextGenerator.handleTokenProduction(org.javacc.parser.TokenProduction);org.javacc.parser.TokenProduction;1;0;2;1.0;0.9375;12;73;12
org.javacc.jjtree.JavaCodeGenerator.insertOpenNodeAction(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.IO;1;1;1;1.0;0.9285714285714286;5;331;100
org.javacc.jjtree.JJTree.main(java.lang.String[]);org.javacc.parser.Main;0;3;6;0.875;1.0;89;151;205
org.javacc.jjtree.JJTreeParser.bnf_production();org.javacc.jjtree.ASTProduction;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTLHS);org.javacc.jjtree.NodeScope;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.character_list(org.javacc.parser.Container);org.javacc.parser.Container;1;7;2;0.9879725085910653;0.95;41;8311;0
org.javacc.parser.ExpansionTest.testZeroOrOneConstructor();org.javacc.parser.ZeroOrOne;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFDeclaration);org.javacc.jjtree.JJTreeNode;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.complex_regular_expression_choices(org.javacc.parser.Container);org.javacc.parser.Container;1;6;2;0.9895652173913043;0.9166666666666666;32;8311;0
org.javacc.parser.ParseEngine.buildPhase3Routine(boolean, org.javacc.parser.Phase3Data);org.javacc.parser.NormalProduction;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase3Routine(boolean, org.javacc.parser.Phase3Data);org.javacc.parser.Phase3Data;1;7;4;0.8928571428571429;0.9655172413793104;151;1154;4
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTJavacodeBody);org.javacc.jjtree.NodeScope;0;0;0;0;0;0;0;0
org.javacc.parser.CodeGenerator.isJavaLanguage();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTJavacodeBody);org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase3Routine(boolean, org.javacc.parser.Phase3Data);org.javacc.parser.Expansion;2;7;4;0.8928571428571429;0.95;151;1154;34
org.javacc.jjtree.JJTreeParser.javacc_options();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.NfaState.DumpNonAsciiMove(boolean[], org.javacc.parser.CodeGenerator);org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.PrimaryExpression();org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase3Routine(boolean, org.javacc.parser.Phase3Data);org.javacc.parser.Sequence;0;0;0;0;0;0;0;0
org.javacc.utils.ConditionParser.ReInit(java.io.Reader);org.javacc.utils.JavaCharStream;1;4;1;0.8620689655172413;1.0;8;329;355
org.javacc.jjtree.JJTreeParser.option_binding();org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTree.initializeOptions();org.javacc.jjtree.JJTreeGlobals;0;0;2;1.0;1.0;4;151;34
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTGrammar);org.javacc.jjtree.JJTreeGlobals;0;0;0;0;0;0;0;0
org.javacc.parser.ExpansionTest.testROneOrMoreConstructor();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.jj_3R_85();org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTree.main(java.lang.String[]);org.javacc.jjtree.CPPNodeFiles;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.build(org.javacc.parser.CodeGenerator);org.javacc.parser.NormalProduction;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTExpansionNodeScope);org.javacc.jjtree.SimpleNode;0;0;0;0;0;0;0;0
org.javacc.parser.OptionsTest.testDefaults();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.jj_ntk();org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeOptionsTest.testNodeClass();org.javacc.jjtree.JJTreeOptions;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.tryTokenSequence(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope, org.javacc.jjtree.Token, org.javacc.jjtree.Token);org.javacc.jjtree.ASTProduction;1;3;3;1.0;0.9411764705882353;19;331;14
org.javacc.jjtree.NodeScope.isVoid();org.javacc.jjtree.ASTNodeDescriptor;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.setupPhase3Builds(org.javacc.parser.Phase3Data);org.javacc.parser.TryBlock;0;0;0;0;0;0;0;0
org.javacc.parser.RCharacterList.SortDescriptors();org.javacc.parser.SingleCharacter;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.build(org.javacc.parser.CodeGenerator);org.javacc.parser.JavaCCGlobals;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTExpansionNodeScope);org.javacc.jjtree.IO;1;4;2;0.9642857142857143;0.9523809523809523;10;331;100
org.javacc.jjtree.JJTreeParserTokenManager.TokenLexicalActions(org.javacc.jjtree.Token);org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.parser.OptionsTest.testSetNonexistentOption();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.insertOpenNodeCode(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.ASTNodeDescriptor;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTExpansionNodeScope);org.javacc.jjtree.NodeScope;1;4;2;0.9642857142857143;0.9411764705882353;10;331;53
org.javacc.utils.ConditionParserTokenManager.MoreLexicalActions();org.javacc.utils.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.ExpansionTest.testRZeroOrMoreConstructor();org.javacc.parser.RZeroOrMore;1;1;2;0.9375;0.8571428571428572;7;72;18
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveStringLiteralDfa1_2(long);org.javacc.jjtree.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.jjdoc.TextGenerator.productionStart(org.javacc.parser.NormalProduction);org.javacc.parser.NormalProduction;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.dumpBoilerPlateInHeader();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.CodeGenerator.printTokenSetup(org.javacc.parser.Token);org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.generateCPPMethodheader(org.javacc.parser.BNFProduction, org.javacc.parser.Token);org.javacc.parser.CodeGenerator;5;1;1;0.9811320754716981;0.9019607843137255;41;1154;265
org.javacc.parser.RRepetitionRange.GenerateNfa(boolean);org.javacc.parser.RZeroOrMore;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.node_descriptor_expression();org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.regular_expression(org.javacc.parser.Container);org.javacc.parser.RSequence;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.generate3R(org.javacc.parser.Expansion, org.javacc.parser.Phase3Data);org.javacc.parser.RegularExpression;0;0;0;0;0;0;0;0
org.javacc.parser.NfaState.DumpNonAsciiMoveMethod(org.javacc.parser.CodeGenerator);org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.javaCodeCheck(org.javacc.parser.Expansion);org.javacc.parser.OneOrMore;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.regexpr_spec(org.javacc.parser.TokenProduction);org.javacc.parser.Container;1;8;3;0.9862542955326461;0.9523809523809523;40;8311;0
org.javacc.parser.test.NfaStateTest.testDumpMoveNfa();org.javacc.parser.NfaState;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFAction);org.javacc.jjtree.IO;0;0;0;0;0;0;0;0
org.javacc.parser.ExpansionTest.testOneOrMoreConstructor();org.javacc.parser.OneOrMore;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.complex_regular_expression(org.javacc.parser.Container);org.javacc.parser.Container;1;5;2;0.9913644214162349;0.9333333333333333;37;8311;0
org.javacc.jjtree.IO.setOutput();org.javacc.jjtree.JJTreeOptions;0;4;1;0.7142857142857143;1.0;11;100;103
org.javacc.parser.OptionsTest.testSetWrongTypeForOption();org.javacc.parser.JavaCCErrors;0;0;0;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpStateSetsInitialised();org.javacc.parser.NfaState;0;0;0;0;0;0;0;0
org.javacc.jjdoc.HTMLGenerator.documentStart();org.javacc.jjdoc.JJDocOptions;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTLHS);org.javacc.jjtree.JJTreeNode;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.jjMoveNfa_2(int, int);org.javacc.parser.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpNonAsciiMoveMethods();org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTExpansionNodeScope);org.javacc.jjtree.ASTExpansionNodeScope;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.start();org.javacc.parser.RChoice;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTCompilationUnit);org.javacc.jjtree.JJTreeState;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.phase1ExpansionGen(org.javacc.parser.Expansion);org.javacc.parser.NonTerminal;3;4;3;0.95;0.9090909090909091;245;1154;28
org.javacc.jjtree.ASTGrammar.generate(org.javacc.jjtree.IO);org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeOptionsTest.testNodeFactory();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.OptionsTest.testDefaults();org.javacc.parser.JavaCCErrors;0;0;0;0;0;0;0;0
org.javacc.parser.ParseGenCPP.start();org.javacc.parser.JavaCCErrors;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.genFirstSet(org.javacc.parser.Expansion);org.javacc.parser.ZeroOrOne;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.dumpBoilerPlateInHeader();org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.JJTreeNode);org.javacc.jjtree.JJTreeNode;3;0;1;1.0;0.8461538461538461;25;331;94
org.javacc.parser.Choice.dump(int, java.util.Set);org.javacc.parser.Expansion;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.getIndentation(int, org.javacc.jjtree.JJTreeNode);org.javacc.jjtree.JJTreeNode;0;0;0;0;0;0;0;0
org.javacc.parser.RRepetitionRange.GenerateNfa(boolean);org.javacc.parser.RZeroOrOne;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFAction);org.javacc.jjtree.ASTBNFAction;0;0;0;0;0;0;0;0
org.javacc.jjtree.ASTNodeDescriptor.expression_text();org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTLHS);org.javacc.jjtree.TokenUtils;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFDeclaration);org.javacc.jjtree.TokenUtils;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.jjMoveStringLiteralDfa3_0(long, long, long, long, long, long);org.javacc.parser.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.jj_3R_93();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.restoreBeginLineCol();org.javacc.parser.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.complex_regular_expression_choices(org.javacc.parser.Container);org.javacc.parser.Expansion;2;6;2;0.9895652173913043;0.9130434782608696;32;8311;34
org.javacc.parser.ParseEngine.setupPhase3Builds(org.javacc.parser.Phase3Data);org.javacc.parser.ZeroOrOne;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion(org.javacc.parser.Container);org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.LexGen.start();org.javacc.parser.JavaCCErrors;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.regular_expr_production();org.javacc.parser.JavaCCParserInternals;0;9;2;0.9848484848484849;1.0;89;8311;263
org.javacc.parser.ParseEngine.phase1ExpansionGen(org.javacc.parser.Expansion);org.javacc.parser.Choice;0;0;0;0;0;0;0;0
org.javacc.parser.ExpansionTest.testZeroOrMoreConstructor();org.javacc.parser.ZeroOrMore;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.setupPhase3Builds(org.javacc.parser.Phase3Data);org.javacc.parser.Phase3Data;1;3;2;0.9230769230769231;0.8888888888888888;48;1154;4
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTExpansionNodeScope);org.javacc.jjtree.ASTNodeDescriptor;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.tryTokenSequence(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope, org.javacc.jjtree.Token, org.javacc.jjtree.Token);org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.complex_regular_expression_unit();org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0;0;0;0
org.javacc.utils.ConditionParser.getToken(int);org.javacc.utils.Token;0;1;1;0.9642857142857143;1.0;8;329;24
org.javacc.jjdoc.XTextGenerator.handleTokenProduction(org.javacc.parser.TokenProduction);org.javacc.parser.RegExprSpec;2;0;2;1.0;0.8;12;73;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFDeclaration);org.javacc.jjtree.IO;0;0;0;0;0;0;0;0
org.javacc.parser.Semanticize.action(org.javacc.parser.Expansion);org.javacc.parser.ZeroOrMore;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTree.main(java.lang.String[]);org.javacc.jjtree.JJTreeParser;0;0;0;0;0;0;0;0
org.javacc.parser.LexGen.start();org.javacc.parser.NfaState;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTree.main(java.lang.String[]);org.javacc.jjtree.JJTreeOptions;0;3;6;0.875;1.0;89;151;103
org.javacc.parser.ParseEngine.genFirstSet(org.javacc.parser.Expansion);org.javacc.parser.Lookahead;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.insertOpenNodeCode(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.jjtree.ASTBNFAction.getScopingParent(org.javacc.jjtree.NodeScope);org.javacc.jjtree.SimpleNode;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.ReInit(java.io.InputStream, java.lang.String);org.javacc.parser.JavaCCParserTokenManager;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion_unit(org.javacc.parser.Container);org.javacc.parser.Choice;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.start();org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.getNextToken();org.javacc.parser.TokenMgrError;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion_unit(org.javacc.parser.Container);org.javacc.parser.NonTerminal;3;21;4;0.9655737704918033;0.9538461538461538;212;8311;28
org.javacc.parser.ParseEngine.phase1ExpansionGen(org.javacc.parser.Expansion);org.javacc.parser.Sequence;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveStringLiteralDfa10_0(long, long, long, long);org.javacc.jjtree.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeOptionsTest.testNodeFactory();org.javacc.parser.JavaCCErrors;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase1Routine(org.javacc.parser.BNFProduction);org.javacc.parser.CodeGenerator;7;5;1;0.9122807017543859;0.8771929824561404;93;1154;265
org.javacc.jjtree.JJTreeParser.ReInit(java.io.Reader);org.javacc.jjtree.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.build(org.javacc.parser.CodeGenerator);org.javacc.parser.JavaCodeProduction;1;8;2;0.8852459016393442;0.9714285714285714;91;1154;3
org.javacc.jjtree.IO.setInput(java.lang.String);org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase1Routine(org.javacc.parser.BNFProduction);org.javacc.parser.BNFProduction;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.character_descriptor(org.javacc.parser.Container);org.javacc.parser.Container;1;7;3;0.9879725085910653;0.95;34;8311;0
org.javacc.parser.ExpansionTest.testZeroOrMoreConstructor();org.javacc.parser.Expansion;3;1;1;0.9375;0.8125;7;72;34
org.javacc.parser.LexGenCPP.PrintClassHead();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase3Routine(boolean, org.javacc.parser.Phase3Data);org.javacc.parser.RegularExpression;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.insertCatchBlocks(java.lang.String, java.util.Enumeration, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.NodeScope;4;0;2;1.0;0.6666666666666667;21;331;53
org.javacc.parser.ExpansionTest.testSequenceConstructor();org.javacc.parser.Sequence;0;0;0;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpStatesForKindInitialised();org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.local_lookahead();org.javacc.parser.Container;1;12;2;0.9806763285024155;0.984375;113;8311;0
org.javacc.parser.LexGen.DumpFillToken();org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.regular_expr_production();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.NfaState.GenerateNonAsciiMoves(org.javacc.parser.CodeGenerator);org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.setUp();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase1Routine(org.javacc.parser.BNFProduction);org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.ASTNodeDescriptor.expression_text();org.javacc.jjtree.JJTreeNode;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.complex_regular_expression_unit(org.javacc.parser.Container);org.javacc.parser.Container;1;11;2;0.9814502529510961;0.9714285714285714;93;8311;0
org.javacc.jjtree.JJTreeNode.print(org.javacc.jjtree.IO, org.javacc.jjtree.Token);org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.regexpr_spec(org.javacc.parser.TokenProduction);org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.utils.ConditionParserTokenManager.jjMoveNfa_1(int, int);org.javacc.utils.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.insertCloseNodeCode(boolean, java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.ASTNodeDescriptor;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.insertOpenNodeCode(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.JJTreeOptions;0;0;4;1.0;1.0;33;331;103
org.javacc.jjtree.JJTreeOptionsTest.testNodeClass();org.javacc.parser.JavaCCErrors;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.javacc_input();org.javacc.jjtree.JJTreeGlobals;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.notTailOfExpansionUnit();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.AccessModifier(org.javacc.parser.NormalProduction);org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase2Routine(org.javacc.parser.Lookahead);org.javacc.parser.Expansion;1;3;2;0.925;0.9545454545454546;27;1154;34
org.javacc.parser.LexGen.DumpMoreActions();org.javacc.parser.RStringLiteral;0;0;0;0;0;0;0;0
org.javacc.parser.RChoice.CompressChoices();org.javacc.parser.RJustName;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.JJTreeNode);org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveStringLiteralDfa13_0(long, long);org.javacc.jjtree.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.LexGen.DumpSkipActions();org.javacc.parser.RStringLiteral;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.insertOpenNodeCode(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.IO;0;0;0;0;0;0;0;0
org.javacc.jjdoc.HTMLGenerator.documentStart();org.javacc.jjdoc.TextGenerator;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveStringLiteralDfa9_0(long, long, long, long);org.javacc.jjtree.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpFillToken();org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.parser.NfaState.DumpNonAsciiMoveForCompositeState(org.javacc.parser.CodeGenerator);org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.getToken(int);org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFDeclaration);org.javacc.jjtree.JJTreeNode;1;3;3;1.0;0.9333333333333333;19;331;94
org.javacc.jjtree.CPPCodeGenerator.insertOpenNodeCode(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.JJTreeOptions;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.complex_regular_expression(org.javacc.parser.Container);org.javacc.parser.RSequence;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.getNextToken();org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.javaCodeCheck(org.javacc.parser.Expansion);org.javacc.parser.NormalProduction;0;0;0;0;0;0;0;0
org.javacc.parser.RCharacterList.RemoveNegation();org.javacc.parser.SingleCharacter;0;0;0;0;0;0;0;0
org.javacc.parser.OptionsTest.testSetWrongTypeForOption();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.LexGen.PrintClassHead();org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.parser.RCharacterList.RemoveNegation();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.tryExpansionUnit(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.JJTreeNode, org.javacc.jjtree.NodeScope);org.javacc.jjtree.SimpleNode;0;0;0;0;0;0;0;0
org.javacc.parser.LexGen.DumpFillToken();org.javacc.parser.JavaFiles;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFAction);org.javacc.jjtree.JJTreeNode;1;4;3;0.9655172413793104;0.9411764705882353;33;331;94
org.javacc.jjtree.ASTGrammar.generate(org.javacc.jjtree.IO);org.javacc.jjtree.JavaCodeGenerator;1;0;1;1.0;1.0;13;19;331
org.javacc.parser.RCharacterList.GenerateNfa(boolean);org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.RStringLiteral.dump(int, java.util.Set);org.javacc.parser.RegularExpression;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveStringLiteralDfa14_0(long, long);org.javacc.jjtree.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.option_binding();org.javacc.jjtree.ASTOptionBinding;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.SkipLexicalActions(org.javacc.parser.Token);org.javacc.parser.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.jjStartNfaWithStates_0(int, int, int);org.javacc.parser.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.jjMoveStringLiteralDfa2_0(long, long, long, long, long, long);org.javacc.parser.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.LexGen.start();org.javacc.parser.Nfa;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.option_binding();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.IntegerLiteral();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.phase1ExpansionGen(org.javacc.parser.Expansion);org.javacc.parser.ZeroOrMore;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.complex_regular_expression_choices(org.javacc.parser.Container);org.javacc.parser.RChoice;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTGrammar);org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.ParseGen.start(boolean);org.javacc.parser.ParseEngine;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpGetNextToken();org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.insertCloseNodeAction(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.IO;1;1;1;1.0;0.9285714285714286;5;331;100
org.javacc.parser.LexGen.DumpStaticVarDeclarations(java.lang.String);org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveNfa_1(int, int);org.javacc.jjtree.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpStatesForStateInitialised();org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTree.main(java.lang.String[]);org.javacc.jjtree.CPPJJTreeState;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.jjFillToken();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.phase1ExpansionGen(org.javacc.parser.Expansion);org.javacc.parser.JavaCCGlobals;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.phase1ExpansionGen(org.javacc.parser.Expansion);org.javacc.parser.ZeroOrOne;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpMoreActions();org.javacc.parser.RStringLiteral;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.minimumSize(int, org.javacc.parser.Expansion);org.javacc.parser.Expansion;1;2;2;0.975609756097561;0.9523809523809523;70;1154;34
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTGrammar);org.javacc.jjtree.SimpleNode;0;0;0;0;0;0;0;0
org.javacc.utils.ConditionParserTokenManager.getNextToken();org.javacc.utils.TokenMgrError;0;0;0;0;0;0;0;0
org.javacc.parser.NfaState.GenerateNonAsciiMoves(org.javacc.parser.CodeGenerator);org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpFillToken();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.complex_regular_expression_unit(org.javacc.parser.Container);org.javacc.parser.Expansion;2;11;2;0.9814502529510961;0.9565217391304348;93;8311;34
org.javacc.jjtree.JJTreeParser.jj_ntk();org.javacc.jjtree.JJTreeParserTokenManager;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.genFirstSet(org.javacc.parser.Expansion);org.javacc.parser.Semanticize;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.jjMoveStringLiteralDfa1_3(long);org.javacc.parser.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.build(org.javacc.parser.CodeGenerator);org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpMoveNfaInitialised();org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.bnf_production();org.javacc.parser.BNFProduction;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeOptionsTest.testOutputDirectory();org.javacc.parser.JavaCCErrors;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.getNextToken();org.javacc.jjtree.TokenMgrError;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.JJTreeNode);org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.expansion_unit(org.javacc.jjtree.ASTProduction);org.javacc.jjtree.JJTreeNode;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTExpansionNodeScope);org.javacc.jjtree.IO;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.genReturn(boolean);org.javacc.parser.NormalProduction;0;0;0;0;0;0;0;0
org.javacc.jjdoc.HTMLGenerator.documentEnd();org.javacc.jjdoc.TextGenerator;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.character_descriptor(org.javacc.parser.Container);org.javacc.parser.JavaCCParserInternals;2;7;3;0.9879725085910653;1.0;34;8311;263
org.javacc.jjdoc.test.JJDocMainTest.testMainProgramHTML();org.javacc.JavaCCTestCase;0;0;0;0;0;0;0;0
org.javacc.jjtree.ASTNodeDescriptor.getNodeType();org.javacc.jjtree.JJTreeOptions;0;0;0;0;0;0;0;0
org.javacc.parser.OneOrMore.dump(int, java.util.Set);org.javacc.parser.Expansion;0;0;0;0;0;0;0;0
org.javacc.parser.RZeroOrMore.GenerateNfa(boolean);org.javacc.parser.RegularExpression;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTree.main(java.lang.String[]);org.javacc.jjtree.JJTreeGlobals;0;3;6;0.875;1.0;89;151;34
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFAction);org.javacc.jjtree.ASTBNFAction;0;0;0;0;0;0;0;0
org.javacc.parser.NfaState.PrintNoBreak(boolean[], int, org.javacc.parser.CodeGenerator);org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpStatesForState();org.javacc.parser.NfaState;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpGetNextToken();org.javacc.parser.LexGen;0;0;0;0;0;0;0;0
org.javacc.parser.NfaState.AddRange(char, char);org.javacc.parser.LexGen;0;0;0;0;0;0;0;0
org.javacc.parser.RStringLiteral.GenerateNfa(boolean);org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpStateSetsInitialised();org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.tryExpansionUnit(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.JJTreeNode, org.javacc.jjtree.NodeScope);org.javacc.jjtree.IO;2;4;2;1.0;0.9047619047619048;19;331;100
org.javacc.parser.RCharacterList.RemoveNegation();org.javacc.parser.NfaState;0;0;0;0;0;0;0;0
org.javacc.jjdoc.BNFGenerator.productionStart(org.javacc.parser.NormalProduction);org.javacc.parser.NormalProduction;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.character_list();org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0;0;0;0
org.javacc.utils.ConditionParser.ReInit(java.io.InputStream, java.lang.String);org.javacc.utils.ConditionParserTokenManager;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.javacc_input();org.javacc.parser.JavaCCGlobals;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.node_descriptor();org.javacc.jjtree.ASTNodeDescriptor;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.regexpr_kind(org.javacc.parser.TokenProduction);org.javacc.parser.TokenProduction;1;5;1;0.9912891986062717;0.9444444444444444;24;8311;12
org.javacc.parser.ExpansionTest.testRJustNameConstructor();org.javacc.parser.Expansion;2;1;1;0.9375;0.8823529411764706;6;72;34
org.javacc.parser.JavaCCParser.StringLiteral();org.javacc.parser.JavaCCParserInternals;1;1;1;0.9982517482517482;1.0;8;8311;263
org.javacc.parser.JavaCCParser.javacc_options();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.FormalParameters(java.util.List);org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpTokenActions();org.javacc.parser.LexGen;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.PrintClassHead();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.regular_expression(org.javacc.parser.Container);org.javacc.parser.RegularExpression;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTCompilationUnit);org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.IO.setOutput();org.javacc.parser.JavaCCGlobals;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.insertCloseNodeCode(boolean, java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.IO;1;0;3;1.0;0.9473684210526316;16;331;100
org.javacc.parser.ParseEngine.phase1ExpansionGen(org.javacc.parser.Expansion);org.javacc.parser.Action;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.ReInit(java.io.InputStream, java.lang.String);org.javacc.jjtree.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.jjtree.IO.setInput(java.lang.String);org.javacc.parser.JavaCCGlobals;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.option_binding();org.javacc.jjtree.TokenUtils;0;0;0;0;0;0;0;0
org.javacc.parser.ExpansionTest.testChoiceConstructor();org.javacc.parser.Choice;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.bnf_production();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.ExpansionTest.testSequenceConstructor();org.javacc.parser.Expansion;2;1;1;0.9411764705882353;0.8888888888888888;7;72;34
org.javacc.jjtree.JJTreeParser.bnf_production();org.javacc.jjtree.JJTreeGlobals;0;0;0;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.setupState();org.javacc.parser.Semanticize;0;0;0;0;0;0;0;0
org.javacc.jjtree.ParseException.getMessage();org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.jjdoc.XTextGenerator.handleTokenProduction(org.javacc.parser.TokenProduction);org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.ResultType(java.util.List);org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion_unit(org.javacc.parser.Container);org.javacc.parser.Sequence;0;0;0;0;0;0;0;0
org.javacc.utils.ConditionParserTokenManager.jjMoveStringLiteralDfa1_3(long);org.javacc.utils.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.JJTreeNode);org.javacc.jjtree.JJTreeNode;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTree.main(java.lang.String[]);org.javacc.jjtree.SimpleNode;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeNode.jjtAddChild(int, org.javacc.jjtree.Node);org.javacc.jjtree.SimpleNode;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveStringLiteralDfa4_0(long, long, long, long, long, long);org.javacc.jjtree.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.utils.ConditionParser.ReInit(java.io.InputStream, java.lang.String);org.javacc.utils.JavaCharStream;1;4;1;0.8620689655172413;1.0;13;329;355
org.javacc.parser.test.NfaStateTest.testDumpStatesForState();org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.parser.Action.dump(int, java.util.Set);org.javacc.parser.Expansion;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.insertCloseNodeCode(boolean, java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.NodeScope;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFNodeScope);org.javacc.jjtree.ASTNodeDescriptor;0;0;0;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpStateSets();org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.jjtree.ASTBNF.toString();org.javacc.jjtree.ASTProduction;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.phase1ExpansionGen(org.javacc.parser.Expansion);org.javacc.parser.Lookahead;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.insertCloseNodeCode(boolean, java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.IO;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.regexpr_spec(org.javacc.parser.TokenProduction);org.javacc.parser.RegExprSpec;4;8;3;0.9862542955326461;0.8095238095238095;40;8311;0
org.javacc.parser.JavaCCParser.complex_regular_expression(org.javacc.parser.Container);org.javacc.parser.Expansion;2;5;2;0.9913644214162349;0.9230769230769231;37;8311;34
org.javacc.jjtree.CPPCodeGenerator.tryExpansionUnit(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.JJTreeNode, org.javacc.jjtree.NodeScope);org.javacc.jjtree.NodeScope;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.TokenLexicalActions(org.javacc.parser.Token);org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.jjdoc.TextGenerator.handleTokenProduction(org.javacc.parser.TokenProduction);org.javacc.jjdoc.JJDoc;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.insertOpenNodeAction(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.IO;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFDeclaration);org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.parser.LexGen.start();org.javacc.parser.RStringLiteral;0;0;0;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpStatesForKindInitialised();org.javacc.parser.NfaState;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.buildLookaheadChecker(java.lang.String[], org.javacc.parser.Lookahead[]);org.javacc.parser.CodeGenerator;3;8;2;0.8222222222222222;0.9423076923076923;162;1154;265
org.javacc.parser.ParseEngine.phase1ExpansionGen(org.javacc.parser.Expansion);org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.RJustName.GenerateNfa(boolean);org.javacc.parser.RegularExpression;0;0;0;0;0;0;0;0
org.javacc.jjtree.ASTGrammar.generate(org.javacc.jjtree.IO);org.javacc.jjtree.CPPNodeFiles;0;0;0;0;0;0;0;0
org.javacc.parser.ExpansionTest.testZeroOrMoreConstructor();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.javacc_options();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTJavacodeBody);org.javacc.jjtree.IO;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeNode.whiteOut(org.javacc.jjtree.Token);org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.jjdoc.HTMLGenerator.documentStart();org.javacc.jjdoc.JJDocGlobals;0;0;0;0;0;0;0;0
org.javacc.parser.ParseGen.start(boolean);org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFDeclaration);org.javacc.jjtree.NodeScope;2;3;3;1.0;0.8666666666666667;19;331;53
org.javacc.parser.JavaCCParser.ClassOrInterfaceDeclaration(int, java.util.List);org.javacc.parser.JavaCCParserInternals;1;13;1;0.9775086505190311;1.0;54;8311;263
org.javacc.parser.LexGen.DumpSkipActions();org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.parser.ExpansionTest.testRZeroOrMoreConstructor();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.dumpBoilerPlateInHeader();org.javacc.parser.LexGen;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.buildLookaheadChecker(java.lang.String[], org.javacc.parser.Lookahead[]);org.javacc.parser.Lookahead;0;0;0;0;0;0;0;0
org.javacc.utils.ConditionParser.getNextToken();org.javacc.utils.Token;0;3;1;0.8928571428571429;1.0;7;329;24
org.javacc.jjtree.JavaCodeGenerator.tryTokenSequence(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope, org.javacc.jjtree.Token, org.javacc.jjtree.Token);org.javacc.jjtree.NodeScope;3;3;3;1.0;0.8333333333333334;19;331;53
org.javacc.parser.CodeGenerator.getLeadingComments(org.javacc.parser.Token);org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.PrintClassHead();org.javacc.parser.JavaCCErrors;0;0;0;0;0;0;0;0
org.javacc.jjdoc.HTMLGenerator.productionStart(org.javacc.parser.NormalProduction);org.javacc.jjdoc.JJDocOptions;0;0;0;0;0;0;0;0
org.javacc.parser.ParseGenCPP.start();org.javacc.parser.JavaCCGlobals;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.genjj_3Call(org.javacc.parser.Expansion);org.javacc.parser.Expansion;1;0;1;1.0;0.9285714285714286;4;1154;34
org.javacc.jjtree.JavaCodeGenerator.getIndentation(int, org.javacc.jjtree.JJTreeNode);org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.javacode_production();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTGrammar);org.javacc.jjtree.IO;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.jjMoveStringLiteralDfa14_0(long, long);org.javacc.parser.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.buildLookaheadChecker(java.lang.String[], org.javacc.parser.Lookahead[]);org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.RStringLiteral.toString();org.javacc.parser.Expansion;1;1;1;0.8333333333333334;0.9285714285714286;3;908;34
org.javacc.jjdoc.XTextGenerator.documentEnd();org.javacc.jjdoc.TextGenerator;1;0;1;1.0;0.9615384615384616;3;73;111
org.javacc.parser.JavaCCParser.regexpr_spec(org.javacc.parser.TokenProduction);org.javacc.parser.TokenProduction;1;8;3;0.9862542955326461;0.9655172413793104;40;8311;12
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTGrammar);org.javacc.jjtree.IO;3;0;2;1.0;0.8125;6;331;100
org.javacc.parser.JavaCCParserTokenManager.TokenLexicalActions(org.javacc.parser.Token);org.javacc.parser.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.LexGen.DumpMoreActions();org.javacc.parser.Action;0;0;0;0;0;0;0;0
org.javacc.parser.LexGen.writeTemplate(java.lang.Object[], java.lang.String);org.javacc.utils.JavaFileGenerator;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTGrammar);org.javacc.jjtree.JJTreeGlobals;0;0;2;1.0;1.0;6;331;34
org.javacc.parser.JavaCCParser.expansion_unit(org.javacc.parser.Container);org.javacc.parser.Expansion;4;21;4;0.9655737704918033;0.9436619718309859;212;8311;34
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFNodeScope);org.javacc.jjtree.NodeScope;0;0;0;0;0;0;0;0
org.javacc.parser.NfaState.DumpNonAsciiMoveMethod(org.javacc.parser.CodeGenerator);org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.local_lookahead();org.javacc.parser.Expansion;2;12;2;0.9806763285024155;0.9733333333333334;113;8311;34
org.javacc.parser.JavaCCParser.expansion_choices(org.javacc.parser.Container);org.javacc.parser.Choice;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.phase1ExpansionGen(org.javacc.parser.Expansion);org.javacc.parser.TryBlock;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.complex_regular_expression_choices();org.javacc.jjtree.JJTJJTreeParserState;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.tryTokenSequence(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope, org.javacc.jjtree.Token, org.javacc.jjtree.Token);org.javacc.jjtree.IO;2;3;3;1.0;0.9130434782608696;19;331;100
org.javacc.parser.test.NfaStateTest.testDumpMoveNfaInitialised();org.javacc.parser.NfaState;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase1Routine(org.javacc.parser.BNFProduction);org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.getNextToken();org.javacc.parser.JavaCCParserTokenManager;0;0;0;0;0;0;0;0
org.javacc.parser.CodeGenerator.getTrailingComments(org.javacc.parser.Token);org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpSkipActions();org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.parser.CodeGenerator.genClassStart(java.lang.String, java.lang.String, java.lang.String[], java.lang.String[]);org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpCharAndRangeMoves();org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion(org.javacc.parser.Container);org.javacc.parser.Sequence;0;0;0;0;0;0;0;0
org.javacc.jjdoc.BNFGenerator.create_output_stream();org.javacc.jjdoc.JJDocOptions;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeOptionsTest.testValidateReturnType();org.javacc.parser.JavaCCErrors;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTExpansionNodeScope);org.javacc.jjtree.ASTNodeDescriptor;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.local_lookahead();org.javacc.parser.Lookahead;0;0;0;0;0;0;0;0
org.javacc.parser.RCharacterList.GenerateNfa(boolean);org.javacc.parser.Nfa;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion_unit(org.javacc.parser.Container);org.javacc.parser.JavaCCParserInternals;1;21;4;0.9655737704918033;1.0;212;8311;263
org.javacc.parser.LexGen.PrintClassHead();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpTokenActions();org.javacc.parser.Action;0;0;0;0;0;0;0;0
org.javacc.parser.RCharacterList.RemoveNegation();org.javacc.parser.CharacterRange;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.tryExpansionUnit(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.JJTreeNode, org.javacc.jjtree.NodeScope);org.javacc.jjtree.SimpleNode;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.Expression(java.util.List);org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.character_list(org.javacc.parser.Container);org.javacc.parser.RCharacterList;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParserTokenManager.jjMoveStringLiteralDfa10_0(long, long, long, long);org.javacc.parser.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.buildPhase3Routine(boolean, org.javacc.parser.Phase3Data);org.javacc.parser.OneOrMore;0;0;0;0;0;0;0;0
org.javacc.parser.RRepetitionRange.GenerateNfa(boolean);org.javacc.parser.RSequence;0;0;0;0;0;0;0;0
org.javacc.parser.NfaState.AddRange(char, char);org.javacc.parser.Main;0;0;0;0;0;0;0;0
org.javacc.jjtree.IO.create_output_file_name(java.lang.String);org.javacc.jjtree.JJTreeOptions;0;0;1;1.0;1.0;23;100;103
org.javacc.jjtree.JJTreeParser.javacc_input();org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTJavacodeBody);org.javacc.jjtree.ASTJavacodeBody;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.setupPhase3Builds(org.javacc.parser.Phase3Data);org.javacc.parser.OneOrMore;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.genFirstSet(org.javacc.parser.Expansion);org.javacc.parser.NormalProduction;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpDebugMethods();org.javacc.parser.LexGen;0;0;0;0;0;0;0;0
org.javacc.parser.ExpansionTest.setUp();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTLHS);org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.start();org.javacc.parser.JavaCCErrors;0;0;0;0;0;0;0;0
org.javacc.parser.OutputFile.getPrintWriter();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.RegularExpression.dump(int, java.util.Set);org.javacc.parser.Expansion;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTree.p(java.lang.String);org.javacc.jjtree.IO;1;0;1;1.0;0.9285714285714286;3;151;100
org.javacc.parser.ParseEngine.generate3R(org.javacc.parser.Expansion, org.javacc.parser.Phase3Data);org.javacc.parser.NonTerminal;1;3;3;0.9318181818181819;0.9473684210526316;33;1154;28
org.javacc.jjtree.JavaCodeGenerator.insertCloseNodeCode(boolean, java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.JJTreeOptions;0;0;3;1.0;1.0;16;331;103
org.javacc.parser.JavaCCParserTokenManager.jjMoveStringLiteralDfa9_0(long, long, long, long);org.javacc.parser.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.expansion_unit(org.javacc.parser.Container);org.javacc.parser.Lookahead;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTree.main(java.lang.String[]);org.javacc.jjtree.ASTGrammar;1;3;6;0.875;0.9583333333333334;89;151;19
org.javacc.parser.LexGen.PrintClassHead();org.javacc.parser.JavaCCErrors;0;0;0;0;0;0;0;0
org.javacc.parser.RCharacterList.GenerateNfa(boolean);org.javacc.parser.CharacterRange;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeNode.translateImage(org.javacc.jjtree.Token);org.javacc.jjtree.Token;0;0;0;0;0;0;0;0
org.javacc.parser.test.NfaStateTest.testDumpNonAsciiMoveMethodsInitialised();org.javacc.parser.NfaState;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.genFirstSet(org.javacc.parser.Expansion);org.javacc.parser.TryBlock;0;0;0;0;0;0;0;0
org.javacc.parser.RZeroOrMore.GenerateNfa(boolean);org.javacc.parser.Nfa;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.jj_consume_token(int);org.javacc.jjtree.JJTreeParserTokenManager;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.phase1ExpansionGen(org.javacc.parser.Expansion);org.javacc.parser.CodeGenerator;3;4;3;0.95;0.9516129032258065;245;1154;265
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTCompilationUnit);org.javacc.jjtree.JJTreeNode;0;0;0;0;0;0;0;0
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTBNFDeclaration);org.javacc.jjtree.ASTBNFDeclaration;0;0;0;0;0;0;0;0
org.javacc.parser.NfaState.DumpNonAsciiMove(boolean[], org.javacc.parser.CodeGenerator);org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.parser.ParseEngine.setupPhase3Builds(org.javacc.parser.Phase3Data);org.javacc.parser.ZeroOrMore;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.jj_3R_92();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.jjdoc.XTextGenerator.handleTokenProduction(org.javacc.parser.TokenProduction);org.javacc.jjdoc.JJDoc;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.getNextToken();org.javacc.jjtree.JJTreeParserTokenManager;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.insertOpenNodeCode(java.lang.String, org.javacc.jjtree.IO, org.javacc.jjtree.NodeScope);org.javacc.jjtree.NodeScope;4;0;4;1.0;0.7647058823529411;33;331;53
org.javacc.utils.ConditionParser.jj_ntk();org.javacc.utils.Token;1;2;1;0.9310344827586207;0.9;4;329;24
org.javacc.jjtree.ASTOptionBinding.translateImage(org.javacc.jjtree.Token);org.javacc.jjtree.JJTreeNode;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.regular_expr_production();org.javacc.parser.TokenProduction;7;9;2;0.9848484848484849;0.8055555555555556;89;8311;12
org.javacc.parser.OutputFile.getPrintWriter();org.javacc.Version;0;6;1;0.7142857142857143;1.0;19;153;2
org.javacc.parser.LexGenCPP.start();org.javacc.parser.Nfa;0;0;0;0;0;0;0;0
org.javacc.utils.ConditionParserTokenManager.jjMoveStringLiteralDfa3_0(long, long);org.javacc.utils.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.LexGen.start();org.javacc.parser.RegularExpression;0;0;0;0;0;0;0;0
org.javacc.parser.ParseGenCPP.start();org.javacc.parser.ParseEngine;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTLHS);org.javacc.jjtree.NodeScope;1;0;2;1.0;0.9230769230769231;10;331;53
org.javacc.jjtree.JJTreeParser.ReInit(java.io.Reader);org.javacc.jjtree.JJTreeParserTokenManager;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParserTokenManager.jjMoveStringLiteralDfa5_0(long, long, long, long, long, long);org.javacc.jjtree.JavaCharStream;0;0;0;0;0;0;0;0
org.javacc.parser.LexGenCPP.DumpTokenActions();org.javacc.parser.CodeGenerator;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.javacc_input();org.javacc.parser.Options;0;0;0;0;0;0;0;0
org.javacc.parser.JavaCCParser.RUNSIGNEDSHIFT();org.javacc.parser.Token;0;0;0;0;0;0;0;0
org.javacc.jjtree.JJTreeParser.javacode_production();org.javacc.jjtree.JJTreeGlobals;0;0;0;0;0;0;0;0
org.javacc.jjtree.JavaCodeGenerator.getIndentation(int, org.javacc.jjtree.JJTreeNode);org.javacc.jjtree.JJTreeNode;1;0;1;1.0;0.8888888888888888;7;331;94
org.javacc.jjtree.CPPCodeGenerator.visit(java.lang.Object, org.javacc.jjtree.ASTLHS);org.javacc.jjtree.TokenUtils;0;0;0;0;0;0;0;0
org.javacc.utils.ConditionParserTokenManager.jjMoveStringLiteralDfa1_0(long);org.javacc.utils.JavaCharStream;0;0;0;0;0;0;0;0
